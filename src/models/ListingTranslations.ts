/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ListingTranslation } from './ListingTranslation';
import {
    ListingTranslationFromJSON,
    ListingTranslationFromJSONTyped,
    ListingTranslationToJSON,
    ListingTranslationToJSONTyped,
} from './ListingTranslation';

/**
 * Container for all current supported translations of a listing. Note that Etsy periodically adds/removes languages, so this list may change in the future.
 * @export
 * @interface ListingTranslations
 */
export interface ListingTranslations {
    /**
     * 
     * @type {ListingTranslation}
     * @memberof ListingTranslations
     */
    de?: ListingTranslation | null;
    /**
     * 
     * @type {ListingTranslation}
     * @memberof ListingTranslations
     */
    enGB?: ListingTranslation | null;
    /**
     * 
     * @type {ListingTranslation}
     * @memberof ListingTranslations
     */
    enIN?: ListingTranslation | null;
    /**
     * 
     * @type {ListingTranslation}
     * @memberof ListingTranslations
     */
    enUS?: ListingTranslation | null;
    /**
     * 
     * @type {ListingTranslation}
     * @memberof ListingTranslations
     */
    es?: ListingTranslation | null;
    /**
     * 
     * @type {ListingTranslation}
     * @memberof ListingTranslations
     */
    fr?: ListingTranslation | null;
    /**
     * 
     * @type {ListingTranslation}
     * @memberof ListingTranslations
     */
    it?: ListingTranslation | null;
    /**
     * 
     * @type {ListingTranslation}
     * @memberof ListingTranslations
     */
    ja?: ListingTranslation | null;
    /**
     * 
     * @type {ListingTranslation}
     * @memberof ListingTranslations
     */
    nl?: ListingTranslation | null;
    /**
     * 
     * @type {ListingTranslation}
     * @memberof ListingTranslations
     */
    pl?: ListingTranslation | null;
    /**
     * 
     * @type {ListingTranslation}
     * @memberof ListingTranslations
     */
    pt?: ListingTranslation | null;
    /**
     * 
     * @type {ListingTranslation}
     * @memberof ListingTranslations
     */
    ru?: ListingTranslation | null;
}

/**
 * Check if a given object implements the ListingTranslations interface.
 */
export function instanceOfListingTranslations(value: object): value is ListingTranslations {
    return true;
}

export function ListingTranslationsFromJSON(json: any): ListingTranslations {
    return ListingTranslationsFromJSONTyped(json, false);
}

export function ListingTranslationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListingTranslations {
    if (json == null) {
        return json;
    }
    return {
        
        'de': json['de'] == null ? undefined : ListingTranslationFromJSON(json['de']),
        'enGB': json['en-GB'] == null ? undefined : ListingTranslationFromJSON(json['en-GB']),
        'enIN': json['en-IN'] == null ? undefined : ListingTranslationFromJSON(json['en-IN']),
        'enUS': json['en-US'] == null ? undefined : ListingTranslationFromJSON(json['en-US']),
        'es': json['es'] == null ? undefined : ListingTranslationFromJSON(json['es']),
        'fr': json['fr'] == null ? undefined : ListingTranslationFromJSON(json['fr']),
        'it': json['it'] == null ? undefined : ListingTranslationFromJSON(json['it']),
        'ja': json['ja'] == null ? undefined : ListingTranslationFromJSON(json['ja']),
        'nl': json['nl'] == null ? undefined : ListingTranslationFromJSON(json['nl']),
        'pl': json['pl'] == null ? undefined : ListingTranslationFromJSON(json['pl']),
        'pt': json['pt'] == null ? undefined : ListingTranslationFromJSON(json['pt']),
        'ru': json['ru'] == null ? undefined : ListingTranslationFromJSON(json['ru']),
    };
}

export function ListingTranslationsToJSON(json: any): ListingTranslations {
    return ListingTranslationsToJSONTyped(json, false);
}

export function ListingTranslationsToJSONTyped(value?: ListingTranslations | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'de': ListingTranslationToJSON(value['de']),
        'en-GB': ListingTranslationToJSON(value['enGB']),
        'en-IN': ListingTranslationToJSON(value['enIN']),
        'en-US': ListingTranslationToJSON(value['enUS']),
        'es': ListingTranslationToJSON(value['es']),
        'fr': ListingTranslationToJSON(value['fr']),
        'it': ListingTranslationToJSON(value['it']),
        'ja': ListingTranslationToJSON(value['ja']),
        'nl': ListingTranslationToJSON(value['nl']),
        'pl': ListingTranslationToJSON(value['pl']),
        'pt': ListingTranslationToJSON(value['pt']),
        'ru': ListingTranslationToJSON(value['ru']),
    };
}

