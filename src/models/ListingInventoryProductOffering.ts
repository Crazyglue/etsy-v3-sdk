/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Money } from './Money';
import {
    MoneyFromJSON,
    MoneyFromJSONTyped,
    MoneyToJSON,
    MoneyToJSONTyped,
} from './Money';

/**
 * A representation of an offering for a listing.
 * @export
 * @interface ListingInventoryProductOffering
 */
export interface ListingInventoryProductOffering {
    /**
     * The ID for the ProductOffering
     * @type {number}
     * @memberof ListingInventoryProductOffering
     */
    offeringId?: number;
    /**
     * The quantity the ProductOffering
     * @type {number}
     * @memberof ListingInventoryProductOffering
     */
    quantity?: number;
    /**
     * Whether or not the offering can be shown to buyers.
     * @type {boolean}
     * @memberof ListingInventoryProductOffering
     */
    isEnabled?: boolean;
    /**
     * Whether or not the offering has been deleted.
     * @type {boolean}
     * @memberof ListingInventoryProductOffering
     */
    isDeleted?: boolean;
    /**
     * Price data for this ProductOffering
     * @type {Money}
     * @memberof ListingInventoryProductOffering
     */
    price?: Money;
}

/**
 * Check if a given object implements the ListingInventoryProductOffering interface.
 */
export function instanceOfListingInventoryProductOffering(value: object): value is ListingInventoryProductOffering {
    return true;
}

export function ListingInventoryProductOfferingFromJSON(json: any): ListingInventoryProductOffering {
    return ListingInventoryProductOfferingFromJSONTyped(json, false);
}

export function ListingInventoryProductOfferingFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListingInventoryProductOffering {
    if (json == null) {
        return json;
    }
    return {
        
        'offeringId': json['offering_id'] == null ? undefined : json['offering_id'],
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
        'isEnabled': json['is_enabled'] == null ? undefined : json['is_enabled'],
        'isDeleted': json['is_deleted'] == null ? undefined : json['is_deleted'],
        'price': json['price'] == null ? undefined : MoneyFromJSON(json['price']),
    };
}

export function ListingInventoryProductOfferingToJSON(json: any): ListingInventoryProductOffering {
    return ListingInventoryProductOfferingToJSONTyped(json, false);
}

export function ListingInventoryProductOfferingToJSONTyped(value?: ListingInventoryProductOffering | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'offering_id': value['offeringId'],
        'quantity': value['quantity'],
        'is_enabled': value['isEnabled'],
        'is_deleted': value['isDeleted'],
        'price': MoneyToJSON(value['price']),
    };
}

