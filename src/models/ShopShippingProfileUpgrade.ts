/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Money } from './Money';
import {
    MoneyFromJSON,
    MoneyFromJSONTyped,
    MoneyToJSON,
    MoneyToJSONTyped,
} from './Money';

/**
 * A representation of a shipping profile upgrade option.
 * @export
 * @interface ShopShippingProfileUpgrade
 */
export interface ShopShippingProfileUpgrade {
    /**
     * The numeric ID of the base shipping profile.
     * @type {number}
     * @memberof ShopShippingProfileUpgrade
     */
    shippingProfileId?: number;
    /**
     * The numeric ID that is associated with a shipping upgrade
     * @type {number}
     * @memberof ShopShippingProfileUpgrade
     */
    upgradeId?: number;
    /**
     * Name for the shipping upgrade shown to shoppers at checkout, e.g. USPS Priority.
     * @type {string}
     * @memberof ShopShippingProfileUpgrade
     */
    upgradeName?: string;
    /**
     * The type of the shipping upgrade. Domestic (0) or international (1).
     * @type {string}
     * @memberof ShopShippingProfileUpgrade
     */
    type?: ShopShippingProfileUpgradeTypeEnum;
    /**
     * The positive non-zero numeric position in the images displayed in a listing, with rank 1 images appearing in the left-most position in a listing.
     * @type {number}
     * @memberof ShopShippingProfileUpgrade
     */
    rank?: number;
    /**
     * The IETF language tag for the language of the shipping profile. Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`
     * @type {string}
     * @memberof ShopShippingProfileUpgrade
     */
    language?: string;
    /**
     * Additional cost of adding the shipping upgrade.
     * @type {Money}
     * @memberof ShopShippingProfileUpgrade
     */
    price?: Money;
    /**
     * Additional cost of adding the shipping upgrade for each additional item.
     * @type {Money}
     * @memberof ShopShippingProfileUpgrade
     */
    secondaryPrice?: Money;
    /**
     * The unique ID of a supported shipping carrier, which is used to calculate an Estimated Delivery Date. **Required with `mail_class`** if `min_delivery_days` and `max_delivery_days` are null.
     * @type {number}
     * @memberof ShopShippingProfileUpgrade
     */
    shippingCarrierId?: number | null;
    /**
     * The unique ID string of a shipping carrier's mail class, which is used to calculate an estimated delivery date. **Required with `shipping_carrier_id`** if `min_delivery_days` and `max_delivery_days` are null.
     * @type {string}
     * @memberof ShopShippingProfileUpgrade
     */
    mailClass?: string | null;
    /**
     * The minimum number of business days a buyer can expect to wait to receive their purchased item once it has shipped. **Required with `max_delivery_days`** if `mail_class` is null.
     * @type {number}
     * @memberof ShopShippingProfileUpgrade
     */
    minDeliveryDays?: number | null;
    /**
     * The maximum number of business days a buyer can expect to wait to receive their purchased item once it has shipped. **Required with `min_delivery_days`** if `mail_class` is null.
     * @type {number}
     * @memberof ShopShippingProfileUpgrade
     */
    maxDeliveryDays?: number | null;
}


/**
 * @export
 */
export const ShopShippingProfileUpgradeTypeEnum = {
    _0: '0',
    _1: '1'
} as const;
export type ShopShippingProfileUpgradeTypeEnum = typeof ShopShippingProfileUpgradeTypeEnum[keyof typeof ShopShippingProfileUpgradeTypeEnum];


/**
 * Check if a given object implements the ShopShippingProfileUpgrade interface.
 */
export function instanceOfShopShippingProfileUpgrade(value: object): value is ShopShippingProfileUpgrade {
    return true;
}

export function ShopShippingProfileUpgradeFromJSON(json: any): ShopShippingProfileUpgrade {
    return ShopShippingProfileUpgradeFromJSONTyped(json, false);
}

export function ShopShippingProfileUpgradeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShopShippingProfileUpgrade {
    if (json == null) {
        return json;
    }
    return {
        
        'shippingProfileId': json['shipping_profile_id'] == null ? undefined : json['shipping_profile_id'],
        'upgradeId': json['upgrade_id'] == null ? undefined : json['upgrade_id'],
        'upgradeName': json['upgrade_name'] == null ? undefined : json['upgrade_name'],
        'type': json['type'] == null ? undefined : json['type'],
        'rank': json['rank'] == null ? undefined : json['rank'],
        'language': json['language'] == null ? undefined : json['language'],
        'price': json['price'] == null ? undefined : MoneyFromJSON(json['price']),
        'secondaryPrice': json['secondary_price'] == null ? undefined : MoneyFromJSON(json['secondary_price']),
        'shippingCarrierId': json['shipping_carrier_id'] == null ? undefined : json['shipping_carrier_id'],
        'mailClass': json['mail_class'] == null ? undefined : json['mail_class'],
        'minDeliveryDays': json['min_delivery_days'] == null ? undefined : json['min_delivery_days'],
        'maxDeliveryDays': json['max_delivery_days'] == null ? undefined : json['max_delivery_days'],
    };
}

export function ShopShippingProfileUpgradeToJSON(json: any): ShopShippingProfileUpgrade {
    return ShopShippingProfileUpgradeToJSONTyped(json, false);
}

export function ShopShippingProfileUpgradeToJSONTyped(value?: ShopShippingProfileUpgrade | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'shipping_profile_id': value['shippingProfileId'],
        'upgrade_id': value['upgradeId'],
        'upgrade_name': value['upgradeName'],
        'type': value['type'],
        'rank': value['rank'],
        'language': value['language'],
        'price': MoneyToJSON(value['price']),
        'secondary_price': MoneyToJSON(value['secondaryPrice']),
        'shipping_carrier_id': value['shippingCarrierId'],
        'mail_class': value['mailClass'],
        'min_delivery_days': value['minDeliveryDays'],
        'max_delivery_days': value['maxDeliveryDays'],
    };
}

