/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ShopShippingProfileDestination } from './ShopShippingProfileDestination';
import {
    ShopShippingProfileDestinationFromJSON,
    ShopShippingProfileDestinationFromJSONTyped,
    ShopShippingProfileDestinationToJSON,
    ShopShippingProfileDestinationToJSONTyped,
} from './ShopShippingProfileDestination';
import type { ShopShippingProfileUpgrade } from './ShopShippingProfileUpgrade';
import {
    ShopShippingProfileUpgradeFromJSON,
    ShopShippingProfileUpgradeFromJSONTyped,
    ShopShippingProfileUpgradeToJSON,
    ShopShippingProfileUpgradeToJSONTyped,
} from './ShopShippingProfileUpgrade';

/**
 * Represents a profile used to set a listing's shipping information. Please note that it's not possible to create calculated shipping templates via the API. However, you can associate calculated shipping profiles created from Shop Manager with listings using the API.
 * @export
 * @interface ShopShippingProfile
 */
export interface ShopShippingProfile {
    /**
     * The numeric ID of the shipping profile.
     * @type {number}
     * @memberof ShopShippingProfile
     */
    shippingProfileId?: number;
    /**
     * The name string of this shipping profile.
     * @type {string}
     * @memberof ShopShippingProfile
     */
    title?: string | null;
    /**
     * The numeric ID for the [user](/documentation/reference#tag/User) who owns the shipping profile.
     * @type {number}
     * @memberof ShopShippingProfile
     */
    userId?: number;
    /**
     * The minimum number of days for processing the listing.
     * @type {number}
     * @memberof ShopShippingProfile
     */
    minProcessingDays?: number | null;
    /**
     * The maximum number of days for processing the listing.
     * @type {number}
     * @memberof ShopShippingProfile
     */
    maxProcessingDays?: number | null;
    /**
     * Translated display label string for processing days.
     * @type {string}
     * @memberof ShopShippingProfile
     */
    processingDaysDisplayLabel?: string;
    /**
     * The ISO code of the country from which the listing ships.
     * @type {string}
     * @memberof ShopShippingProfile
     */
    originCountryIso?: string;
    /**
     * When true, someone deleted this shipping profile.
     * @type {boolean}
     * @memberof ShopShippingProfile
     */
    isDeleted?: boolean;
    /**
     * A list of [shipping profile destinations](/documentation/reference/#operation/createShopShippingProfileDestination) available for this shipping profile.
     * @type {Array<ShopShippingProfileDestination>}
     * @memberof ShopShippingProfile
     */
    shippingProfileDestinations?: Array<ShopShippingProfileDestination>;
    /**
     * A list of [shipping profile upgrades](/documentation/reference/#operation/createShopShippingProfileUpgrade) available for this shipping profile.
     * @type {Array<ShopShippingProfileUpgrade>}
     * @memberof ShopShippingProfile
     */
    shippingProfileUpgrades?: Array<ShopShippingProfileUpgrade>;
    /**
     * The postal code string (not necessarily a number) for the location from which the listing ships. Required if the `origin_country_iso` supports postal codes. See the [Fulfillment Tutorial docs](https://developer.etsy.com/documentation/tutorials/fulfillment/#countries-requiring-postal-codes) for more info
     * @type {string}
     * @memberof ShopShippingProfile
     */
    originPostalCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ShopShippingProfile
     */
    profileType?: ShopShippingProfileProfileTypeEnum;
    /**
     * The domestic handling fee added to buyer's shipping total - only available for calculated shipping profiles.
     * @type {number}
     * @memberof ShopShippingProfile
     */
    domesticHandlingFee?: number;
    /**
     * The international handling fee added to buyer's shipping total - only available for calculated shipping profiles.
     * @type {number}
     * @memberof ShopShippingProfile
     */
    internationalHandlingFee?: number;
}


/**
 * @export
 */
export const ShopShippingProfileProfileTypeEnum = {
    Manual: 'manual',
    Calculated: 'calculated'
} as const;
export type ShopShippingProfileProfileTypeEnum = typeof ShopShippingProfileProfileTypeEnum[keyof typeof ShopShippingProfileProfileTypeEnum];


/**
 * Check if a given object implements the ShopShippingProfile interface.
 */
export function instanceOfShopShippingProfile(value: object): value is ShopShippingProfile {
    return true;
}

export function ShopShippingProfileFromJSON(json: any): ShopShippingProfile {
    return ShopShippingProfileFromJSONTyped(json, false);
}

export function ShopShippingProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShopShippingProfile {
    if (json == null) {
        return json;
    }
    return {
        
        'shippingProfileId': json['shipping_profile_id'] == null ? undefined : json['shipping_profile_id'],
        'title': json['title'] == null ? undefined : json['title'],
        'userId': json['user_id'] == null ? undefined : json['user_id'],
        'minProcessingDays': json['min_processing_days'] == null ? undefined : json['min_processing_days'],
        'maxProcessingDays': json['max_processing_days'] == null ? undefined : json['max_processing_days'],
        'processingDaysDisplayLabel': json['processing_days_display_label'] == null ? undefined : json['processing_days_display_label'],
        'originCountryIso': json['origin_country_iso'] == null ? undefined : json['origin_country_iso'],
        'isDeleted': json['is_deleted'] == null ? undefined : json['is_deleted'],
        'shippingProfileDestinations': json['shipping_profile_destinations'] == null ? undefined : ((json['shipping_profile_destinations'] as Array<any>).map(ShopShippingProfileDestinationFromJSON)),
        'shippingProfileUpgrades': json['shipping_profile_upgrades'] == null ? undefined : ((json['shipping_profile_upgrades'] as Array<any>).map(ShopShippingProfileUpgradeFromJSON)),
        'originPostalCode': json['origin_postal_code'] == null ? undefined : json['origin_postal_code'],
        'profileType': json['profile_type'] == null ? undefined : json['profile_type'],
        'domesticHandlingFee': json['domestic_handling_fee'] == null ? undefined : json['domestic_handling_fee'],
        'internationalHandlingFee': json['international_handling_fee'] == null ? undefined : json['international_handling_fee'],
    };
}

export function ShopShippingProfileToJSON(json: any): ShopShippingProfile {
    return ShopShippingProfileToJSONTyped(json, false);
}

export function ShopShippingProfileToJSONTyped(value?: ShopShippingProfile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'shipping_profile_id': value['shippingProfileId'],
        'title': value['title'],
        'user_id': value['userId'],
        'min_processing_days': value['minProcessingDays'],
        'max_processing_days': value['maxProcessingDays'],
        'processing_days_display_label': value['processingDaysDisplayLabel'],
        'origin_country_iso': value['originCountryIso'],
        'is_deleted': value['isDeleted'],
        'shipping_profile_destinations': value['shippingProfileDestinations'] == null ? undefined : ((value['shippingProfileDestinations'] as Array<any>).map(ShopShippingProfileDestinationToJSON)),
        'shipping_profile_upgrades': value['shippingProfileUpgrades'] == null ? undefined : ((value['shippingProfileUpgrades'] as Array<any>).map(ShopShippingProfileUpgradeToJSON)),
        'origin_postal_code': value['originPostalCode'],
        'profile_type': value['profileType'],
        'domestic_handling_fee': value['domesticHandlingFee'],
        'international_handling_fee': value['internationalHandlingFee'],
    };
}

