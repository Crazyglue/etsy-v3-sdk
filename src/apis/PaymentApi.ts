/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorSchema,
  Payments,
} from '../models/index';
import {
    ErrorSchemaFromJSON,
    ErrorSchemaToJSON,
    PaymentsFromJSON,
    PaymentsToJSON,
} from '../models/index';

export interface GetPaymentAccountLedgerEntryPaymentsRequest {
    shopId: number;
    ledgerEntryIds: Array<number>;
}

export interface GetPaymentsRequest {
    shopId: number;
    paymentIds: Array<number>;
}

export interface GetShopPaymentByReceiptIdRequest {
    shopId: number;
    receiptId: number;
}

/**
 * 
 */
export class PaymentApi extends runtime.BaseAPI {

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Get a Payment from a PaymentAccount Ledger Entry ID, if applicable
     */
    async getPaymentAccountLedgerEntryPaymentsRaw(requestParameters: GetPaymentAccountLedgerEntryPaymentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Payments>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling getPaymentAccountLedgerEntryPayments().'
            );
        }

        if (requestParameters['ledgerEntryIds'] == null) {
            throw new runtime.RequiredError(
                'ledgerEntryIds',
                'Required parameter "ledgerEntryIds" was null or undefined when calling getPaymentAccountLedgerEntryPayments().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['ledgerEntryIds'] != null) {
            queryParameters['ledger_entry_ids'] = requestParameters['ledgerEntryIds'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["transactions_r"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/payment-account/ledger-entries/payments`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaymentsFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Get a Payment from a PaymentAccount Ledger Entry ID, if applicable
     */
    async getPaymentAccountLedgerEntryPayments(requestParameters: GetPaymentAccountLedgerEntryPaymentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Payments> {
        const response = await this.getPaymentAccountLedgerEntryPaymentsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a list of payments from a shop identified by `shop_id`. You can also filter results using a list of payment IDs.
     */
    async getPaymentsRaw(requestParameters: GetPaymentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Payments>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling getPayments().'
            );
        }

        if (requestParameters['paymentIds'] == null) {
            throw new runtime.RequiredError(
                'paymentIds',
                'Required parameter "paymentIds" was null or undefined when calling getPayments().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['paymentIds'] != null) {
            queryParameters['payment_ids'] = requestParameters['paymentIds'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["transactions_r"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/payments`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaymentsFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a list of payments from a shop identified by `shop_id`. You can also filter results using a list of payment IDs.
     */
    async getPayments(requestParameters: GetPaymentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Payments> {
        const response = await this.getPaymentsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a payment from a specific receipt, identified by `receipt_id`, from a specific shop, identified by `shop_id`
     */
    async getShopPaymentByReceiptIdRaw(requestParameters: GetShopPaymentByReceiptIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Payments>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling getShopPaymentByReceiptId().'
            );
        }

        if (requestParameters['receiptId'] == null) {
            throw new runtime.RequiredError(
                'receiptId',
                'Required parameter "receiptId" was null or undefined when calling getShopPaymentByReceiptId().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["transactions_r"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/receipts/{receipt_id}/payments`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"receipt_id"}}`, encodeURIComponent(String(requestParameters['receiptId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaymentsFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a payment from a specific receipt, identified by `receipt_id`, from a specific shop, identified by `shop_id`
     */
    async getShopPaymentByReceiptId(requestParameters: GetShopPaymentByReceiptIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Payments> {
        const response = await this.getShopPaymentByReceiptIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
