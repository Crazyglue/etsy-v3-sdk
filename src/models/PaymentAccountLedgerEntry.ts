/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PaymentAdjustment } from './PaymentAdjustment';
import {
    PaymentAdjustmentFromJSON,
    PaymentAdjustmentFromJSONTyped,
    PaymentAdjustmentToJSON,
    PaymentAdjustmentToJSONTyped,
} from './PaymentAdjustment';

/**
 * Represents an entry in a shop's ledger.
 * @export
 * @interface PaymentAccountLedgerEntry
 */
export interface PaymentAccountLedgerEntry {
    /**
     * The ledger entry's numeric ID.
     * @type {number}
     * @memberof PaymentAccountLedgerEntry
     */
    entryId?: number;
    /**
     * The ledger's numeric ID.
     * @type {number}
     * @memberof PaymentAccountLedgerEntry
     */
    ledgerId?: number;
    /**
     * The sequence allows ledger entries to be sorted chronologically. The higher the sequence, the more recent the entry.
     * @type {number}
     * @memberof PaymentAccountLedgerEntry
     */
    sequenceNumber?: number;
    /**
     * The amount of money credited to the ledger.
     * @type {number}
     * @memberof PaymentAccountLedgerEntry
     */
    amount?: number;
    /**
     * The currency of the entry on the ledger.
     * @type {string}
     * @memberof PaymentAccountLedgerEntry
     */
    currency?: string;
    /**
     * Details what kind of ledger entry this is: a payment, refund, reversal of a failed refund, disbursement, returned disbursement, recoupment, miscellaneous credit, miscellaneous debit, or bill payment.
     * @type {string}
     * @memberof PaymentAccountLedgerEntry
     */
    description?: string;
    /**
     * The amount of money in the shop's ledger the moment after this entry was applied.
     * @type {number}
     * @memberof PaymentAccountLedgerEntry
     */
    balance?: number;
    /**
     * The date and time the ledger entry was created in Epoch seconds.
     * @type {number}
     * @memberof PaymentAccountLedgerEntry
     */
    createDate?: number;
    /**
     * The date and time the ledger entry was created in Epoch seconds.
     * @type {number}
     * @memberof PaymentAccountLedgerEntry
     */
    createdTimestamp?: number;
    /**
     * The original reference type for the ledger entry.
     * @type {string}
     * @memberof PaymentAccountLedgerEntry
     */
    ledgerType?: string;
    /**
     * The object type the ledger entry refers to.
     * @type {string}
     * @memberof PaymentAccountLedgerEntry
     */
    referenceType?: string;
    /**
     * The object id the ledger entry refers to.
     * @type {string}
     * @memberof PaymentAccountLedgerEntry
     */
    referenceId?: string | null;
    /**
     * List of refund objects on an Etsy Payments transaction. All monetary amounts are in USD pennies unless otherwise specified.
     * @type {Array<PaymentAdjustment>}
     * @memberof PaymentAccountLedgerEntry
     */
    paymentAdjustments?: Array<PaymentAdjustment>;
}

/**
 * Check if a given object implements the PaymentAccountLedgerEntry interface.
 */
export function instanceOfPaymentAccountLedgerEntry(value: object): value is PaymentAccountLedgerEntry {
    return true;
}

export function PaymentAccountLedgerEntryFromJSON(json: any): PaymentAccountLedgerEntry {
    return PaymentAccountLedgerEntryFromJSONTyped(json, false);
}

export function PaymentAccountLedgerEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentAccountLedgerEntry {
    if (json == null) {
        return json;
    }
    return {
        
        'entryId': json['entry_id'] == null ? undefined : json['entry_id'],
        'ledgerId': json['ledger_id'] == null ? undefined : json['ledger_id'],
        'sequenceNumber': json['sequence_number'] == null ? undefined : json['sequence_number'],
        'amount': json['amount'] == null ? undefined : json['amount'],
        'currency': json['currency'] == null ? undefined : json['currency'],
        'description': json['description'] == null ? undefined : json['description'],
        'balance': json['balance'] == null ? undefined : json['balance'],
        'createDate': json['create_date'] == null ? undefined : json['create_date'],
        'createdTimestamp': json['created_timestamp'] == null ? undefined : json['created_timestamp'],
        'ledgerType': json['ledger_type'] == null ? undefined : json['ledger_type'],
        'referenceType': json['reference_type'] == null ? undefined : json['reference_type'],
        'referenceId': json['reference_id'] == null ? undefined : json['reference_id'],
        'paymentAdjustments': json['payment_adjustments'] == null ? undefined : ((json['payment_adjustments'] as Array<any>).map(PaymentAdjustmentFromJSON)),
    };
}

export function PaymentAccountLedgerEntryToJSON(json: any): PaymentAccountLedgerEntry {
    return PaymentAccountLedgerEntryToJSONTyped(json, false);
}

export function PaymentAccountLedgerEntryToJSONTyped(value?: PaymentAccountLedgerEntry | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'entry_id': value['entryId'],
        'ledger_id': value['ledgerId'],
        'sequence_number': value['sequenceNumber'],
        'amount': value['amount'],
        'currency': value['currency'],
        'description': value['description'],
        'balance': value['balance'],
        'create_date': value['createDate'],
        'created_timestamp': value['createdTimestamp'],
        'ledger_type': value['ledgerType'],
        'reference_type': value['referenceType'],
        'reference_id': value['referenceId'],
        'payment_adjustments': value['paymentAdjustments'] == null ? undefined : ((value['paymentAdjustments'] as Array<any>).map(PaymentAdjustmentToJSON)),
    };
}

