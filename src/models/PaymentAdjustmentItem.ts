/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A payemnt adjustment line item for a payment adjustment.
 * @export
 * @interface PaymentAdjustmentItem
 */
export interface PaymentAdjustmentItem {
    /**
     * The numeric ID for a payment adjustment.
     * @type {number}
     * @memberof PaymentAdjustmentItem
     */
    paymentAdjustmentId?: number;
    /**
     * Unique ID for the adjustment line item.
     * @type {number}
     * @memberof PaymentAdjustmentItem
     */
    paymentAdjustmentItemId?: number;
    /**
     * String indicating the type of adjustment for this line item.
     * @type {string}
     * @memberof PaymentAdjustmentItem
     */
    adjustmentType?: string | null;
    /**
     * Integer value for the amount of the adjustment in original currency.
     * @type {number}
     * @memberof PaymentAdjustmentItem
     */
    amount?: number;
    /**
     * Integer value for the amount of the adjustment in currency for the shop.
     * @type {number}
     * @memberof PaymentAdjustmentItem
     */
    shopAmount?: number;
    /**
     * The unique numeric ID for a transaction.
     * @type {number}
     * @memberof PaymentAdjustmentItem
     */
    transactionId?: number | null;
    /**
     * Unique ID for the bill payment adjustment.
     * @type {number}
     * @memberof PaymentAdjustmentItem
     */
    billPaymentId?: number | null;
    /**
     * The transaction\'s creation date and time, in epoch seconds.
     * @type {number}
     * @memberof PaymentAdjustmentItem
     */
    createdTimestamp?: number;
    /**
     * The update date and time the payment adjustment in epoch seconds.
     * @type {number}
     * @memberof PaymentAdjustmentItem
     */
    updatedTimestamp?: number;
}

/**
 * Check if a given object implements the PaymentAdjustmentItem interface.
 */
export function instanceOfPaymentAdjustmentItem(value: object): value is PaymentAdjustmentItem {
    return true;
}

export function PaymentAdjustmentItemFromJSON(json: any): PaymentAdjustmentItem {
    return PaymentAdjustmentItemFromJSONTyped(json, false);
}

export function PaymentAdjustmentItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentAdjustmentItem {
    if (json == null) {
        return json;
    }
    return {
        
        'paymentAdjustmentId': json['payment_adjustment_id'] == null ? undefined : json['payment_adjustment_id'],
        'paymentAdjustmentItemId': json['payment_adjustment_item_id'] == null ? undefined : json['payment_adjustment_item_id'],
        'adjustmentType': json['adjustment_type'] == null ? undefined : json['adjustment_type'],
        'amount': json['amount'] == null ? undefined : json['amount'],
        'shopAmount': json['shop_amount'] == null ? undefined : json['shop_amount'],
        'transactionId': json['transaction_id'] == null ? undefined : json['transaction_id'],
        'billPaymentId': json['bill_payment_id'] == null ? undefined : json['bill_payment_id'],
        'createdTimestamp': json['created_timestamp'] == null ? undefined : json['created_timestamp'],
        'updatedTimestamp': json['updated_timestamp'] == null ? undefined : json['updated_timestamp'],
    };
}

export function PaymentAdjustmentItemToJSON(json: any): PaymentAdjustmentItem {
    return PaymentAdjustmentItemToJSONTyped(json, false);
}

export function PaymentAdjustmentItemToJSONTyped(value?: PaymentAdjustmentItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'payment_adjustment_id': value['paymentAdjustmentId'],
        'payment_adjustment_item_id': value['paymentAdjustmentItemId'],
        'adjustment_type': value['adjustmentType'],
        'amount': value['amount'],
        'shop_amount': value['shopAmount'],
        'transaction_id': value['transactionId'],
        'bill_payment_id': value['billPaymentId'],
        'created_timestamp': value['createdTimestamp'],
        'updated_timestamp': value['updatedTimestamp'],
    };
}

