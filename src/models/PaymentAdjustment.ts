/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PaymentAdjustmentItem } from './PaymentAdjustmentItem';
import {
    PaymentAdjustmentItemFromJSON,
    PaymentAdjustmentItemFromJSONTyped,
    PaymentAdjustmentItemToJSON,
    PaymentAdjustmentItemToJSONTyped,
} from './PaymentAdjustmentItem';

/**
 * Represents a refund, which applies to a prior Etsy payment. All monetary amounts are in USD pennies unless otherwise specified.
 * @export
 * @interface PaymentAdjustment
 */
export interface PaymentAdjustment {
    /**
     * The numeric ID for a payment adjustment.
     * @type {number}
     * @memberof PaymentAdjustment
     */
    paymentAdjustmentId?: number;
    /**
     * A unique numeric ID for a payment to a specific Etsy [shop](/documentation/reference#tag/Shop).
     * @type {number}
     * @memberof PaymentAdjustment
     */
    paymentId?: number;
    /**
     * The status string of the payment adjustment.
     * @type {string}
     * @memberof PaymentAdjustment
     */
    status?: string;
    /**
     * When true, the payment adjustment was or is likely to complete successfully.
     * @type {boolean}
     * @memberof PaymentAdjustment
     */
    isSuccess?: boolean;
    /**
     * The numeric ID for the [user](/documentation/reference#tag/User) (seller) fulfilling the purchase.
     * @type {number}
     * @memberof PaymentAdjustment
     */
    userId?: number;
    /**
     * A human-readable string describing the reason for the refund.
     * @type {string}
     * @memberof PaymentAdjustment
     */
    reasonCode?: string;
    /**
     * The total numeric amount of the refund in the payment currency.
     * @type {number}
     * @memberof PaymentAdjustment
     */
    totalAdjustmentAmount?: number | null;
    /**
     * The numeric amount of the refund in the shop currency.
     * @type {number}
     * @memberof PaymentAdjustment
     */
    shopTotalAdjustmentAmount?: number | null;
    /**
     * The numeric amount of the refund in the buyer currency.
     * @type {number}
     * @memberof PaymentAdjustment
     */
    buyerTotalAdjustmentAmount?: number | null;
    /**
     * The numeric amount of card processing fees associated with a payment adjustment.
     * @type {number}
     * @memberof PaymentAdjustment
     */
    totalFeeAdjustmentAmount?: number | null;
    /**
     * The transaction\'s creation date and time, in epoch seconds.
     * @type {number}
     * @memberof PaymentAdjustment
     */
    createTimestamp?: number;
    /**
     * The transaction\'s creation date and time, in epoch seconds.
     * @type {number}
     * @memberof PaymentAdjustment
     */
    createdTimestamp?: number;
    /**
     * The date and time of the last change to the payment adjustment in epoch seconds.
     * @type {number}
     * @memberof PaymentAdjustment
     */
    updateTimestamp?: number;
    /**
     * The date and time of the last change to the payment adjustment in epoch seconds.
     * @type {number}
     * @memberof PaymentAdjustment
     */
    updatedTimestamp?: number;
    /**
     * List of payment adjustment line items.
     * @type {Array<PaymentAdjustmentItem>}
     * @memberof PaymentAdjustment
     */
    paymentAdjustmentItems?: Array<PaymentAdjustmentItem>;
}

/**
 * Check if a given object implements the PaymentAdjustment interface.
 */
export function instanceOfPaymentAdjustment(value: object): value is PaymentAdjustment {
    return true;
}

export function PaymentAdjustmentFromJSON(json: any): PaymentAdjustment {
    return PaymentAdjustmentFromJSONTyped(json, false);
}

export function PaymentAdjustmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentAdjustment {
    if (json == null) {
        return json;
    }
    return {
        
        'paymentAdjustmentId': json['payment_adjustment_id'] == null ? undefined : json['payment_adjustment_id'],
        'paymentId': json['payment_id'] == null ? undefined : json['payment_id'],
        'status': json['status'] == null ? undefined : json['status'],
        'isSuccess': json['is_success'] == null ? undefined : json['is_success'],
        'userId': json['user_id'] == null ? undefined : json['user_id'],
        'reasonCode': json['reason_code'] == null ? undefined : json['reason_code'],
        'totalAdjustmentAmount': json['total_adjustment_amount'] == null ? undefined : json['total_adjustment_amount'],
        'shopTotalAdjustmentAmount': json['shop_total_adjustment_amount'] == null ? undefined : json['shop_total_adjustment_amount'],
        'buyerTotalAdjustmentAmount': json['buyer_total_adjustment_amount'] == null ? undefined : json['buyer_total_adjustment_amount'],
        'totalFeeAdjustmentAmount': json['total_fee_adjustment_amount'] == null ? undefined : json['total_fee_adjustment_amount'],
        'createTimestamp': json['create_timestamp'] == null ? undefined : json['create_timestamp'],
        'createdTimestamp': json['created_timestamp'] == null ? undefined : json['created_timestamp'],
        'updateTimestamp': json['update_timestamp'] == null ? undefined : json['update_timestamp'],
        'updatedTimestamp': json['updated_timestamp'] == null ? undefined : json['updated_timestamp'],
        'paymentAdjustmentItems': json['payment_adjustment_items'] == null ? undefined : ((json['payment_adjustment_items'] as Array<any>).map(PaymentAdjustmentItemFromJSON)),
    };
}

export function PaymentAdjustmentToJSON(json: any): PaymentAdjustment {
    return PaymentAdjustmentToJSONTyped(json, false);
}

export function PaymentAdjustmentToJSONTyped(value?: PaymentAdjustment | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'payment_adjustment_id': value['paymentAdjustmentId'],
        'payment_id': value['paymentId'],
        'status': value['status'],
        'is_success': value['isSuccess'],
        'user_id': value['userId'],
        'reason_code': value['reasonCode'],
        'total_adjustment_amount': value['totalAdjustmentAmount'],
        'shop_total_adjustment_amount': value['shopTotalAdjustmentAmount'],
        'buyer_total_adjustment_amount': value['buyerTotalAdjustmentAmount'],
        'total_fee_adjustment_amount': value['totalFeeAdjustmentAmount'],
        'create_timestamp': value['createTimestamp'],
        'created_timestamp': value['createdTimestamp'],
        'update_timestamp': value['updateTimestamp'],
        'updated_timestamp': value['updatedTimestamp'],
        'payment_adjustment_items': value['paymentAdjustmentItems'] == null ? undefined : ((value['paymentAdjustmentItems'] as Array<any>).map(PaymentAdjustmentItemToJSON)),
    };
}

