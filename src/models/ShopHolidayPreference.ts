/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents a shop's holiday preference
 * @export
 * @interface ShopHolidayPreference
 */
export interface ShopHolidayPreference {
    /**
     * The unique positive non-zero numeric ID for an Etsy Shop.
     * @type {number}
     * @memberof ShopHolidayPreference
     */
    shopId?: number;
    /**
     * The unique id that maps to the holiday a country observes. See the [Fulfillment Tutorial docs](https://developer.etsy.com/documentation/tutorials/fulfillment/#country-holidays) for more info
     * @type {string}
     * @memberof ShopHolidayPreference
     */
    holidayId?: ShopHolidayPreferenceHolidayIdEnum;
    /**
     * The country iso where the shop is located.
     * @type {string}
     * @memberof ShopHolidayPreference
     */
    countryIso?: string;
    /**
     * A boolean value for whether the shop will process orders on a particular holiday.
     * @type {boolean}
     * @memberof ShopHolidayPreference
     */
    isWorking?: boolean;
    /**
     * The name of the holiday that a country observes.
     * @type {string}
     * @memberof ShopHolidayPreference
     */
    holidayName?: string;
}


/**
 * @export
 */
export const ShopHolidayPreferenceHolidayIdEnum = {
    _1: '1',
    _2: '2',
    _3: '3',
    _4: '4',
    _5: '5',
    _6: '6',
    _7: '7',
    _8: '8',
    _9: '9',
    _10: '10',
    _11: '11',
    _12: '12',
    _13: '13',
    _14: '14',
    _15: '15',
    _16: '16',
    _17: '17',
    _18: '18',
    _19: '19',
    _20: '20',
    _21: '21',
    _22: '22',
    _23: '23',
    _24: '24',
    _25: '25',
    _26: '26',
    _27: '27',
    _28: '28',
    _29: '29',
    _30: '30',
    _31: '31',
    _32: '32',
    _33: '33',
    _34: '34',
    _35: '35',
    _36: '36',
    _37: '37',
    _38: '38',
    _39: '39',
    _40: '40',
    _41: '41',
    _42: '42',
    _43: '43',
    _44: '44',
    _45: '45',
    _46: '46',
    _47: '47',
    _48: '48',
    _49: '49',
    _50: '50',
    _51: '51',
    _52: '52',
    _53: '53',
    _54: '54',
    _55: '55',
    _56: '56',
    _57: '57',
    _58: '58',
    _59: '59',
    _60: '60',
    _61: '61',
    _62: '62',
    _63: '63',
    _64: '64',
    _65: '65',
    _66: '66',
    _67: '67',
    _68: '68',
    _69: '69',
    _70: '70',
    _71: '71',
    _72: '72',
    _73: '73',
    _74: '74',
    _75: '75',
    _76: '76',
    _77: '77',
    _78: '78',
    _79: '79',
    _80: '80',
    _81: '81',
    _82: '82',
    _83: '83',
    _84: '84',
    _85: '85',
    _86: '86',
    _87: '87',
    _88: '88',
    _89: '89',
    _90: '90',
    _91: '91',
    _92: '92',
    _93: '93',
    _94: '94',
    _95: '95',
    _96: '96',
    _97: '97',
    _98: '98',
    _99: '99',
    _100: '100',
    _101: '101',
    _102: '102',
    _103: '103',
    _104: '104',
    _105: '105'
} as const;
export type ShopHolidayPreferenceHolidayIdEnum = typeof ShopHolidayPreferenceHolidayIdEnum[keyof typeof ShopHolidayPreferenceHolidayIdEnum];


/**
 * Check if a given object implements the ShopHolidayPreference interface.
 */
export function instanceOfShopHolidayPreference(value: object): value is ShopHolidayPreference {
    return true;
}

export function ShopHolidayPreferenceFromJSON(json: any): ShopHolidayPreference {
    return ShopHolidayPreferenceFromJSONTyped(json, false);
}

export function ShopHolidayPreferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShopHolidayPreference {
    if (json == null) {
        return json;
    }
    return {
        
        'shopId': json['shop_id'] == null ? undefined : json['shop_id'],
        'holidayId': json['holiday_id'] == null ? undefined : json['holiday_id'],
        'countryIso': json['country_iso'] == null ? undefined : json['country_iso'],
        'isWorking': json['is_working'] == null ? undefined : json['is_working'],
        'holidayName': json['holiday_name'] == null ? undefined : json['holiday_name'],
    };
}

export function ShopHolidayPreferenceToJSON(json: any): ShopHolidayPreference {
    return ShopHolidayPreferenceToJSONTyped(json, false);
}

export function ShopHolidayPreferenceToJSONTyped(value?: ShopHolidayPreference | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'shop_id': value['shopId'],
        'holiday_id': value['holidayId'],
        'country_iso': value['countryIso'],
        'is_working': value['isWorking'],
        'holiday_name': value['holidayName'],
    };
}

