/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A scale defnining the assignable increments for the property values available to specific product properties.
 * @export
 * @interface TaxonomyPropertyScale
 */
export interface TaxonomyPropertyScale {
    /**
     * The unique numeric ID of a scale.
     * @type {number}
     * @memberof TaxonomyPropertyScale
     */
    scaleId?: number;
    /**
     * The name string for a scale.
     * @type {string}
     * @memberof TaxonomyPropertyScale
     */
    displayName?: string;
    /**
     * The description string for a scale.
     * @type {string}
     * @memberof TaxonomyPropertyScale
     */
    description?: string;
}

/**
 * Check if a given object implements the TaxonomyPropertyScale interface.
 */
export function instanceOfTaxonomyPropertyScale(value: object): value is TaxonomyPropertyScale {
    return true;
}

export function TaxonomyPropertyScaleFromJSON(json: any): TaxonomyPropertyScale {
    return TaxonomyPropertyScaleFromJSONTyped(json, false);
}

export function TaxonomyPropertyScaleFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxonomyPropertyScale {
    if (json == null) {
        return json;
    }
    return {
        
        'scaleId': json['scale_id'] == null ? undefined : json['scale_id'],
        'displayName': json['display_name'] == null ? undefined : json['display_name'],
        'description': json['description'] == null ? undefined : json['description'],
    };
}

export function TaxonomyPropertyScaleToJSON(json: any): TaxonomyPropertyScale {
    return TaxonomyPropertyScaleToJSONTyped(json, false);
}

export function TaxonomyPropertyScaleToJSONTyped(value?: TaxonomyPropertyScale | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'scale_id': value['scaleId'],
        'display_name': value['displayName'],
        'description': value['description'],
    };
}

