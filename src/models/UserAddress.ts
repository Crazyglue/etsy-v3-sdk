/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents a user's address.
 * @export
 * @interface UserAddress
 */
export interface UserAddress {
    /**
     * The numeric ID of the user's address.
     * @type {number}
     * @memberof UserAddress
     */
    userAddressId?: number;
    /**
     * The user's numeric ID.
     * @type {number}
     * @memberof UserAddress
     */
    userId?: number;
    /**
     * The user's name for this address.
     * @type {string}
     * @memberof UserAddress
     */
    name?: string;
    /**
     * The first line of the user's address.
     * @type {string}
     * @memberof UserAddress
     */
    firstLine?: string;
    /**
     * The second line of the user's address.
     * @type {string}
     * @memberof UserAddress
     */
    secondLine?: string | null;
    /**
     * The city field of the user's address.
     * @type {string}
     * @memberof UserAddress
     */
    city?: string;
    /**
     * The state field of the user's address.
     * @type {string}
     * @memberof UserAddress
     */
    state?: string | null;
    /**
     * The zip code field of the user's address.
     * @type {string}
     * @memberof UserAddress
     */
    zip?: string | null;
    /**
     * The ISO code of the country in this address.
     * @type {string}
     * @memberof UserAddress
     */
    isoCountryCode?: string | null;
    /**
     * The name of the user's country.
     * @type {string}
     * @memberof UserAddress
     */
    countryName?: string | null;
    /**
     * Is this the user's default shipping address.
     * @type {boolean}
     * @memberof UserAddress
     */
    isDefaultShippingAddress?: boolean;
}

/**
 * Check if a given object implements the UserAddress interface.
 */
export function instanceOfUserAddress(value: object): value is UserAddress {
    return true;
}

export function UserAddressFromJSON(json: any): UserAddress {
    return UserAddressFromJSONTyped(json, false);
}

export function UserAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserAddress {
    if (json == null) {
        return json;
    }
    return {
        
        'userAddressId': json['user_address_id'] == null ? undefined : json['user_address_id'],
        'userId': json['user_id'] == null ? undefined : json['user_id'],
        'name': json['name'] == null ? undefined : json['name'],
        'firstLine': json['first_line'] == null ? undefined : json['first_line'],
        'secondLine': json['second_line'] == null ? undefined : json['second_line'],
        'city': json['city'] == null ? undefined : json['city'],
        'state': json['state'] == null ? undefined : json['state'],
        'zip': json['zip'] == null ? undefined : json['zip'],
        'isoCountryCode': json['iso_country_code'] == null ? undefined : json['iso_country_code'],
        'countryName': json['country_name'] == null ? undefined : json['country_name'],
        'isDefaultShippingAddress': json['is_default_shipping_address'] == null ? undefined : json['is_default_shipping_address'],
    };
}

export function UserAddressToJSON(json: any): UserAddress {
    return UserAddressToJSONTyped(json, false);
}

export function UserAddressToJSONTyped(value?: UserAddress | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user_address_id': value['userAddressId'],
        'user_id': value['userId'],
        'name': value['name'],
        'first_line': value['firstLine'],
        'second_line': value['secondLine'],
        'city': value['city'],
        'state': value['state'],
        'zip': value['zip'],
        'iso_country_code': value['isoCountryCode'],
        'country_name': value['countryName'],
        'is_default_shipping_address': value['isDefaultShippingAddress'],
    };
}

