/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Reference urls and metadata for a video associated with a specific listing.
 * @export
 * @interface ListingVideo
 */
export interface ListingVideo {
    /**
     * The unique ID of a video associated with a listing.
     * @type {number}
     * @memberof ListingVideo
     */
    videoId?: number;
    /**
     * The video height dimension in pixels.
     * @type {number}
     * @memberof ListingVideo
     */
    height?: number;
    /**
     * The video width dimension in pixels.
     * @type {number}
     * @memberof ListingVideo
     */
    width?: number;
    /**
     * The url of the video thumbnail.
     * @type {string}
     * @memberof ListingVideo
     */
    thumbnailUrl?: string;
    /**
     * The url of the video file.
     * @type {string}
     * @memberof ListingVideo
     */
    videoUrl?: string;
    /**
     * The current state of a given video. Value is one of `active`, `inactive`, `deleted` or `flagged`.
     * @type {string}
     * @memberof ListingVideo
     */
    videoState?: ListingVideoVideoStateEnum;
}


/**
 * @export
 */
export const ListingVideoVideoStateEnum = {
    Active: 'active',
    Inactive: 'inactive',
    Deleted: 'deleted',
    Flagged: 'flagged'
} as const;
export type ListingVideoVideoStateEnum = typeof ListingVideoVideoStateEnum[keyof typeof ListingVideoVideoStateEnum];


/**
 * Check if a given object implements the ListingVideo interface.
 */
export function instanceOfListingVideo(value: object): value is ListingVideo {
    return true;
}

export function ListingVideoFromJSON(json: any): ListingVideo {
    return ListingVideoFromJSONTyped(json, false);
}

export function ListingVideoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListingVideo {
    if (json == null) {
        return json;
    }
    return {
        
        'videoId': json['video_id'] == null ? undefined : json['video_id'],
        'height': json['height'] == null ? undefined : json['height'],
        'width': json['width'] == null ? undefined : json['width'],
        'thumbnailUrl': json['thumbnail_url'] == null ? undefined : json['thumbnail_url'],
        'videoUrl': json['video_url'] == null ? undefined : json['video_url'],
        'videoState': json['video_state'] == null ? undefined : json['video_state'],
    };
}

export function ListingVideoToJSON(json: any): ListingVideo {
    return ListingVideoToJSONTyped(json, false);
}

export function ListingVideoToJSONTyped(value?: ListingVideo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'video_id': value['videoId'],
        'height': value['height'],
        'width': value['width'],
        'thumbnail_url': value['thumbnailUrl'],
        'video_url': value['videoUrl'],
        'video_state': value['videoState'],
    };
}

