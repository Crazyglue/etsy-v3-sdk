/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A section within a shop, into which a user can sort listings.
 * @export
 * @interface ShopSection
 */
export interface ShopSection {
    /**
     * The numeric ID of a section in a specific Etsy shop.
     * @type {number}
     * @memberof ShopSection
     */
    shopSectionId?: number;
    /**
     * The title string for a shop section.
     * @type {string}
     * @memberof ShopSection
     */
    title?: string;
    /**
     * The positive non-zero numeric position of this section in the section display order for a shop, with rank 1 sections appearing first.
     * @type {number}
     * @memberof ShopSection
     */
    rank?: number;
    /**
     * The numeric ID of the [user](/documentation/reference#tag/User) who owns this shop section.
     * @type {number}
     * @memberof ShopSection
     */
    userId?: number;
    /**
     * The number of active listings in one section of a specific Etsy shop.
     * @type {number}
     * @memberof ShopSection
     */
    activeListingCount?: number;
}

/**
 * Check if a given object implements the ShopSection interface.
 */
export function instanceOfShopSection(value: object): value is ShopSection {
    return true;
}

export function ShopSectionFromJSON(json: any): ShopSection {
    return ShopSectionFromJSONTyped(json, false);
}

export function ShopSectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShopSection {
    if (json == null) {
        return json;
    }
    return {
        
        'shopSectionId': json['shop_section_id'] == null ? undefined : json['shop_section_id'],
        'title': json['title'] == null ? undefined : json['title'],
        'rank': json['rank'] == null ? undefined : json['rank'],
        'userId': json['user_id'] == null ? undefined : json['user_id'],
        'activeListingCount': json['active_listing_count'] == null ? undefined : json['active_listing_count'],
    };
}

export function ShopSectionToJSON(json: any): ShopSection {
    return ShopSectionToJSONTyped(json, false);
}

export function ShopSectionToJSONTyped(value?: ShopSection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'shop_section_id': value['shopSectionId'],
        'title': value['title'],
        'rank': value['rank'],
        'user_id': value['userId'],
        'active_listing_count': value['activeListingCount'],
    };
}

