/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Money } from './Money';
import {
    MoneyFromJSON,
    MoneyFromJSONTyped,
    MoneyToJSON,
    MoneyToJSONTyped,
} from './Money';
import type { Shop } from './Shop';
import {
    ShopFromJSON,
    ShopFromJSONTyped,
    ShopToJSON,
    ShopToJSONTyped,
} from './Shop';
import type { ListingTranslations } from './ListingTranslations';
import {
    ListingTranslationsFromJSON,
    ListingTranslationsFromJSONTyped,
    ListingTranslationsToJSON,
    ListingTranslationsToJSONTyped,
} from './ListingTranslations';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';
import type { ListingVideo } from './ListingVideo';
import {
    ListingVideoFromJSON,
    ListingVideoFromJSONTyped,
    ListingVideoToJSON,
    ListingVideoToJSONTyped,
} from './ListingVideo';
import type { ListingInventory } from './ListingInventory';
import {
    ListingInventoryFromJSON,
    ListingInventoryFromJSONTyped,
    ListingInventoryToJSON,
    ListingInventoryToJSONTyped,
} from './ListingInventory';
import type { ShopShippingProfile } from './ShopShippingProfile';
import {
    ShopShippingProfileFromJSON,
    ShopShippingProfileFromJSONTyped,
    ShopShippingProfileToJSON,
    ShopShippingProfileToJSONTyped,
} from './ShopShippingProfile';
import type { ListingImage } from './ListingImage';
import {
    ListingImageFromJSON,
    ListingImageFromJSONTyped,
    ListingImageToJSON,
    ListingImageToJSONTyped,
} from './ListingImage';
import type { ShopProductionPartner } from './ShopProductionPartner';
import {
    ShopProductionPartnerFromJSON,
    ShopProductionPartnerFromJSONTyped,
    ShopProductionPartnerToJSON,
    ShopProductionPartnerToJSONTyped,
} from './ShopProductionPartner';

/**
 * A listing from a shop, which contains a product quantity, title, description, price, etc. and additional fields which represent associations.
 * @export
 * @interface ShopListingWithAssociations
 */
export interface ShopListingWithAssociations {
    /**
     * The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    listingId?: number;
    /**
     * The numeric ID for the [user](/documentation/reference#tag/User) posting the listing.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    userId?: number;
    /**
     * The unique positive non-zero numeric ID for an Etsy Shop.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    shopId?: number;
    /**
     * The listing's title string. When creating or updating a listing, valid title strings contain only letters, numbers, punctuation marks, mathematical symbols, whitespace characters, ™, ©, and ®. (regex: /[^\\p{L}\\p{Nd}\\p{P}\\p{Sm}\\p{Zs}™©®]/u) You can only use the %, :, & and + characters once each.
     * @type {string}
     * @memberof ShopListingWithAssociations
     */
    title?: string;
    /**
     * A description string of the product for sale in the listing.
     * @type {string}
     * @memberof ShopListingWithAssociations
     */
    description?: string;
    /**
     * When _updating_ a listing, this value can be either `active` or `inactive`. Note: Setting a `draft` listing to `active` will also publish the listing on etsy.com and requires that the listing have an image set. Setting a `sold_out` listing to active will update the quantity to 1 and renew the listing on etsy.com.
     * @type {string}
     * @memberof ShopListingWithAssociations
     */
    state?: ShopListingWithAssociationsStateEnum;
    /**
     * The listing\'s creation time, in epoch seconds.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    creationTimestamp?: number;
    /**
     * The listing\'s creation time, in epoch seconds.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    createdTimestamp?: number;
    /**
     * The listing\'s expiration time, in epoch seconds.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    endingTimestamp?: number;
    /**
     * The listing\'s creation time, in epoch seconds.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    originalCreationTimestamp?: number;
    /**
     * The time of the last update to the listing, in epoch seconds.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    lastModifiedTimestamp?: number;
    /**
     * The time of the last update to the listing, in epoch seconds.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    updatedTimestamp?: number;
    /**
     * The date and time of the last state change of this listing.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    stateTimestamp?: number | null;
    /**
     * The positive non-zero number of products available for purchase in the listing. Note: The listing quantity is the sum of available offering quantities. You can request the quantities for individual offerings from the ListingInventory resource using the [getListingInventory](/documentation/reference#operation/getListingInventory) endpoint.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    quantity?: number;
    /**
     * The numeric ID of a section in a specific Etsy shop.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    shopSectionId?: number | null;
    /**
     * The positive non-zero numeric position in the featured listings of the shop, with rank 1 listings appearing in the left-most position in featured listing on a shop’s home page.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    featuredRank?: number;
    /**
     * The full URL to the listing's page on Etsy.
     * @type {string}
     * @memberof ShopListingWithAssociations
     */
    url?: string;
    /**
     * The number of users who marked this Listing a favorite.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    numFavorers?: number;
    /**
     * When true, applicable [shop](/documentation/reference#tag/Shop) tax rates do not apply to this listing at checkout.
     * @type {boolean}
     * @memberof ShopListingWithAssociations
     */
    nonTaxable?: boolean;
    /**
     * When true, applicable [shop](/documentation/reference#tag/Shop) tax rates apply to this listing at checkout.
     * @type {boolean}
     * @memberof ShopListingWithAssociations
     */
    isTaxable?: boolean;
    /**
     * When true, a buyer may contact the seller for a customized order. The default value is true when a shop accepts custom orders. Does not apply to shops that do not accept custom orders.
     * @type {boolean}
     * @memberof ShopListingWithAssociations
     */
    isCustomizable?: boolean;
    /**
     * When true, this listing is personalizable. The default value is null.
     * @type {boolean}
     * @memberof ShopListingWithAssociations
     */
    isPersonalizable?: boolean;
    /**
     * When true, this listing requires personalization. The default value is null. Will only change if is_personalizable is 'true'.
     * @type {boolean}
     * @memberof ShopListingWithAssociations
     */
    personalizationIsRequired?: boolean;
    /**
     * This is an integer value representing the maximum length for the personalization message entered by the buyer. Will only change if is_personalizable is 'true'.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    personalizationCharCountMax?: number | null;
    /**
     * When true, this listing requires personalization. The default value is null. Will only change if is_personalizable is 'true'.
     * @type {string}
     * @memberof ShopListingWithAssociations
     */
    personalizationInstructions?: string | null;
    /**
     * An enumerated type string that indicates whether the listing is physical or a digital download.
     * @type {string}
     * @memberof ShopListingWithAssociations
     */
    listingType?: ShopListingWithAssociationsListingTypeEnum;
    /**
     * A comma-separated list of tag strings for the listing. When creating or updating a listing, valid tag strings contain only letters, numbers, whitespace characters, -, ', ™, ©, and ®. (regex: /[^\\p{L}\\p{Nd}\\p{Zs}\\-'™©®]/u) Default value is null.
     * @type {Array<string>}
     * @memberof ShopListingWithAssociations
     */
    tags?: Array<string>;
    /**
     * A list of material strings for materials used in the product. Valid materials strings contain only letters, numbers, and whitespace characters. (regex: /[^\\p{L}\\p{Nd}\\p{Zs}]/u) Default value is null.
     * @type {Array<string>}
     * @memberof ShopListingWithAssociations
     */
    materials?: Array<string>;
    /**
     * The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile) associated with the listing. Required when listing type is `physical`.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    shippingProfileId?: number | null;
    /**
     * The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    returnPolicyId?: number | null;
    /**
     * The minimum number of days required to process this listing. Default value is null.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    processingMin?: number | null;
    /**
     * The maximum number of days required to process this listing. Default value is null.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    processingMax?: number | null;
    /**
     * An enumerated string indicating who made the product. Helps buyers locate the listing under the Handmade heading. Requires 'is_supply' and 'when_made'.
     * @type {string}
     * @memberof ShopListingWithAssociations
     */
    whoMade?: ShopListingWithAssociationsWhoMadeEnum | null;
    /**
     * An enumerated string for the era in which the maker made the product in this listing. Helps buyers locate the listing under the Vintage heading. Requires 'is_supply' and 'who_made'.
     * @type {string}
     * @memberof ShopListingWithAssociations
     */
    whenMade?: ShopListingWithAssociationsWhenMadeEnum | null;
    /**
     * When true, tags the listing as a supply product, else indicates that it's a finished product. Helps buyers locate the listing under the Supplies heading. Requires 'who_made' and 'when_made'.
     * @type {boolean}
     * @memberof ShopListingWithAssociations
     */
    isSupply?: boolean | null;
    /**
     * The numeric weight of the product measured in units set in \'item_weight_unit\'. Default value is null. If set, the value must be greater than 0.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    itemWeight?: number | null;
    /**
     * A string defining the units used to measure the weight of the product. Default value is null.
     * @type {string}
     * @memberof ShopListingWithAssociations
     */
    itemWeightUnit?: ShopListingWithAssociationsItemWeightUnitEnum | null;
    /**
     * The numeric length of the product measured in units set in \'item_dimensions_unit\'. Default value is null. If set, the value must be greater than 0.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    itemLength?: number | null;
    /**
     * The numeric width of the product measured in units set in \'item_dimensions_unit\'. Default value is null. If set, the value must be greater than 0.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    itemWidth?: number | null;
    /**
     * The numeric length of the product measured in units set in \'item_dimensions_unit\'. Default value is null. If set, the value must be greater than 0.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    itemHeight?: number | null;
    /**
     * A string defining the units used to measure the dimensions of the product. Default value is null.
     * @type {string}
     * @memberof ShopListingWithAssociations
     */
    itemDimensionsUnit?: ShopListingWithAssociationsItemDimensionsUnitEnum | null;
    /**
     * When true, this is a private listing intended for a specific buyer and hidden from shop view.
     * @type {boolean}
     * @memberof ShopListingWithAssociations
     */
    isPrivate?: boolean;
    /**
     * An array of style strings for this listing, each of which is free-form text string such as \"Formal\", or \"Steampunk\". When creating or updating a listing, the listing may have up to two styles. Valid style strings contain only letters, numbers, and whitespace characters. (regex: /[^\\p{L}\\p{Nd}\\p{Zs}]/u) Default value is null.
     * @type {Array<string>}
     * @memberof ShopListingWithAssociations
     */
    style?: Array<string>;
    /**
     * A string describing the files attached to a digital listing.
     * @type {string}
     * @memberof ShopListingWithAssociations
     */
    fileData?: string;
    /**
     * When true, the listing has variations.
     * @type {boolean}
     * @memberof ShopListingWithAssociations
     */
    hasVariations?: boolean;
    /**
     * When true, renews a listing for four months upon expiration.
     * @type {boolean}
     * @memberof ShopListingWithAssociations
     */
    shouldAutoRenew?: boolean;
    /**
     * The IETF language tag for the default language of the listing. Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`, `ru`.
     * @type {string}
     * @memberof ShopListingWithAssociations
     */
    language?: string | null;
    /**
     * The positive non-zero price of the product. (Sold product listings are private) Note: The price is the minimum possible price. The [`getListingInventory`](/documentation/reference/#operation/getListingInventory) method requests exact prices for available offerings.
     * @type {Money}
     * @memberof ShopListingWithAssociations
     */
    price?: Money;
    /**
     * The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy) and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy) for more information.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    taxonomyId?: number | null;
    /**
     * An array of data representing the shipping profile resource.
     * @type {ShopShippingProfile}
     * @memberof ShopListingWithAssociations
     */
    shippingProfile?: ShopShippingProfile | null;
    /**
     * Represents a single user of the site
     * @type {User}
     * @memberof ShopListingWithAssociations
     */
    user?: User | null;
    /**
     * A shop created by an Etsy user.
     * @type {Shop}
     * @memberof ShopListingWithAssociations
     */
    shop?: Shop | null;
    /**
     * Represents a list of listing image resources, each of which contains the reference URLs and metadata for an image
     * @type {Array<ListingImage>}
     * @memberof ShopListingWithAssociations
     */
    images?: Array<ListingImage>;
    /**
     * The single video associated with a listing.
     * @type {Array<ListingVideo>}
     * @memberof ShopListingWithAssociations
     */
    videos?: Array<ListingVideo>;
    /**
     * An enumerated string that attaches a valid association. Default value is null.
     * @type {ListingInventory}
     * @memberof ShopListingWithAssociations
     */
    inventory?: ListingInventory | null;
    /**
     * Represents a list of production partners for a shop.
     * @type {Array<ShopProductionPartner>}
     * @memberof ShopListingWithAssociations
     */
    productionPartners?: Array<ShopProductionPartner>;
    /**
     * A list of SKU strings for the listing. SKUs will only appear if the requesting user owns the shop and a valid matching OAuth 2 token is provided. When requested without the token it will be an empty array.
     * @type {Array<string>}
     * @memberof ShopListingWithAssociations
     */
    skus?: Array<string>;
    /**
     * A map of translations for the listing. Default value is a map of all supported languages keyed to null.
     * @type {ListingTranslations}
     * @memberof ShopListingWithAssociations
     */
    translations?: ListingTranslations | null;
    /**
     * The number of times the listing has been viewed. This value is tabulated once per day and **only for active listings**, so the value is not real-time. If `0`, the listing has either not been viewed, not yet tabulated, was not active during the last tabulation or there was an error fetching the value. If a value is expected, call `getListing` to confirm the value.
     * @type {number}
     * @memberof ShopListingWithAssociations
     */
    views?: number;
}


/**
 * @export
 */
export const ShopListingWithAssociationsStateEnum = {
    Active: 'active',
    Inactive: 'inactive',
    SoldOut: 'sold_out',
    Draft: 'draft',
    Expired: 'expired'
} as const;
export type ShopListingWithAssociationsStateEnum = typeof ShopListingWithAssociationsStateEnum[keyof typeof ShopListingWithAssociationsStateEnum];

/**
 * @export
 */
export const ShopListingWithAssociationsListingTypeEnum = {
    Physical: 'physical',
    Download: 'download',
    Both: 'both'
} as const;
export type ShopListingWithAssociationsListingTypeEnum = typeof ShopListingWithAssociationsListingTypeEnum[keyof typeof ShopListingWithAssociationsListingTypeEnum];

/**
 * @export
 */
export const ShopListingWithAssociationsWhoMadeEnum = {
    IDid: 'i_did',
    SomeoneElse: 'someone_else',
    Collective: 'collective'
} as const;
export type ShopListingWithAssociationsWhoMadeEnum = typeof ShopListingWithAssociationsWhoMadeEnum[keyof typeof ShopListingWithAssociationsWhoMadeEnum];

/**
 * @export
 */
export const ShopListingWithAssociationsWhenMadeEnum = {
    MadeToOrder: 'made_to_order',
    _20202025: '2020_2025',
    _20102019: '2010_2019',
    _20062009: '2006_2009',
    Before2006: 'before_2006',
    _20002005: '2000_2005',
    _1990s: '1990s',
    _1980s: '1980s',
    _1970s: '1970s',
    _1960s: '1960s',
    _1950s: '1950s',
    _1940s: '1940s',
    _1930s: '1930s',
    _1920s: '1920s',
    _1910s: '1910s',
    _1900s: '1900s',
    _1800s: '1800s',
    _1700s: '1700s',
    Before1700: 'before_1700'
} as const;
export type ShopListingWithAssociationsWhenMadeEnum = typeof ShopListingWithAssociationsWhenMadeEnum[keyof typeof ShopListingWithAssociationsWhenMadeEnum];

/**
 * @export
 */
export const ShopListingWithAssociationsItemWeightUnitEnum = {
    Oz: 'oz',
    Lb: 'lb',
    G: 'g',
    Kg: 'kg'
} as const;
export type ShopListingWithAssociationsItemWeightUnitEnum = typeof ShopListingWithAssociationsItemWeightUnitEnum[keyof typeof ShopListingWithAssociationsItemWeightUnitEnum];

/**
 * @export
 */
export const ShopListingWithAssociationsItemDimensionsUnitEnum = {
    In: 'in',
    Ft: 'ft',
    Mm: 'mm',
    Cm: 'cm',
    M: 'm',
    Yd: 'yd',
    Inches: 'inches'
} as const;
export type ShopListingWithAssociationsItemDimensionsUnitEnum = typeof ShopListingWithAssociationsItemDimensionsUnitEnum[keyof typeof ShopListingWithAssociationsItemDimensionsUnitEnum];


/**
 * Check if a given object implements the ShopListingWithAssociations interface.
 */
export function instanceOfShopListingWithAssociations(value: object): value is ShopListingWithAssociations {
    return true;
}

export function ShopListingWithAssociationsFromJSON(json: any): ShopListingWithAssociations {
    return ShopListingWithAssociationsFromJSONTyped(json, false);
}

export function ShopListingWithAssociationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShopListingWithAssociations {
    if (json == null) {
        return json;
    }
    return {
        
        'listingId': json['listing_id'] == null ? undefined : json['listing_id'],
        'userId': json['user_id'] == null ? undefined : json['user_id'],
        'shopId': json['shop_id'] == null ? undefined : json['shop_id'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'state': json['state'] == null ? undefined : json['state'],
        'creationTimestamp': json['creation_timestamp'] == null ? undefined : json['creation_timestamp'],
        'createdTimestamp': json['created_timestamp'] == null ? undefined : json['created_timestamp'],
        'endingTimestamp': json['ending_timestamp'] == null ? undefined : json['ending_timestamp'],
        'originalCreationTimestamp': json['original_creation_timestamp'] == null ? undefined : json['original_creation_timestamp'],
        'lastModifiedTimestamp': json['last_modified_timestamp'] == null ? undefined : json['last_modified_timestamp'],
        'updatedTimestamp': json['updated_timestamp'] == null ? undefined : json['updated_timestamp'],
        'stateTimestamp': json['state_timestamp'] == null ? undefined : json['state_timestamp'],
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
        'shopSectionId': json['shop_section_id'] == null ? undefined : json['shop_section_id'],
        'featuredRank': json['featured_rank'] == null ? undefined : json['featured_rank'],
        'url': json['url'] == null ? undefined : json['url'],
        'numFavorers': json['num_favorers'] == null ? undefined : json['num_favorers'],
        'nonTaxable': json['non_taxable'] == null ? undefined : json['non_taxable'],
        'isTaxable': json['is_taxable'] == null ? undefined : json['is_taxable'],
        'isCustomizable': json['is_customizable'] == null ? undefined : json['is_customizable'],
        'isPersonalizable': json['is_personalizable'] == null ? undefined : json['is_personalizable'],
        'personalizationIsRequired': json['personalization_is_required'] == null ? undefined : json['personalization_is_required'],
        'personalizationCharCountMax': json['personalization_char_count_max'] == null ? undefined : json['personalization_char_count_max'],
        'personalizationInstructions': json['personalization_instructions'] == null ? undefined : json['personalization_instructions'],
        'listingType': json['listing_type'] == null ? undefined : json['listing_type'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'materials': json['materials'] == null ? undefined : json['materials'],
        'shippingProfileId': json['shipping_profile_id'] == null ? undefined : json['shipping_profile_id'],
        'returnPolicyId': json['return_policy_id'] == null ? undefined : json['return_policy_id'],
        'processingMin': json['processing_min'] == null ? undefined : json['processing_min'],
        'processingMax': json['processing_max'] == null ? undefined : json['processing_max'],
        'whoMade': json['who_made'] == null ? undefined : json['who_made'],
        'whenMade': json['when_made'] == null ? undefined : json['when_made'],
        'isSupply': json['is_supply'] == null ? undefined : json['is_supply'],
        'itemWeight': json['item_weight'] == null ? undefined : json['item_weight'],
        'itemWeightUnit': json['item_weight_unit'] == null ? undefined : json['item_weight_unit'],
        'itemLength': json['item_length'] == null ? undefined : json['item_length'],
        'itemWidth': json['item_width'] == null ? undefined : json['item_width'],
        'itemHeight': json['item_height'] == null ? undefined : json['item_height'],
        'itemDimensionsUnit': json['item_dimensions_unit'] == null ? undefined : json['item_dimensions_unit'],
        'isPrivate': json['is_private'] == null ? undefined : json['is_private'],
        'style': json['style'] == null ? undefined : json['style'],
        'fileData': json['file_data'] == null ? undefined : json['file_data'],
        'hasVariations': json['has_variations'] == null ? undefined : json['has_variations'],
        'shouldAutoRenew': json['should_auto_renew'] == null ? undefined : json['should_auto_renew'],
        'language': json['language'] == null ? undefined : json['language'],
        'price': json['price'] == null ? undefined : MoneyFromJSON(json['price']),
        'taxonomyId': json['taxonomy_id'] == null ? undefined : json['taxonomy_id'],
        'shippingProfile': json['shipping_profile'] == null ? undefined : ShopShippingProfileFromJSON(json['shipping_profile']),
        'user': json['user'] == null ? undefined : UserFromJSON(json['user']),
        'shop': json['shop'] == null ? undefined : ShopFromJSON(json['shop']),
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(ListingImageFromJSON)),
        'videos': json['videos'] == null ? undefined : ((json['videos'] as Array<any>).map(ListingVideoFromJSON)),
        'inventory': json['inventory'] == null ? undefined : ListingInventoryFromJSON(json['inventory']),
        'productionPartners': json['production_partners'] == null ? undefined : ((json['production_partners'] as Array<any>).map(ShopProductionPartnerFromJSON)),
        'skus': json['skus'] == null ? undefined : json['skus'],
        'translations': json['translations'] == null ? undefined : ListingTranslationsFromJSON(json['translations']),
        'views': json['views'] == null ? undefined : json['views'],
    };
}

export function ShopListingWithAssociationsToJSON(json: any): ShopListingWithAssociations {
    return ShopListingWithAssociationsToJSONTyped(json, false);
}

export function ShopListingWithAssociationsToJSONTyped(value?: ShopListingWithAssociations | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'listing_id': value['listingId'],
        'user_id': value['userId'],
        'shop_id': value['shopId'],
        'title': value['title'],
        'description': value['description'],
        'state': value['state'],
        'creation_timestamp': value['creationTimestamp'],
        'created_timestamp': value['createdTimestamp'],
        'ending_timestamp': value['endingTimestamp'],
        'original_creation_timestamp': value['originalCreationTimestamp'],
        'last_modified_timestamp': value['lastModifiedTimestamp'],
        'updated_timestamp': value['updatedTimestamp'],
        'state_timestamp': value['stateTimestamp'],
        'quantity': value['quantity'],
        'shop_section_id': value['shopSectionId'],
        'featured_rank': value['featuredRank'],
        'url': value['url'],
        'num_favorers': value['numFavorers'],
        'non_taxable': value['nonTaxable'],
        'is_taxable': value['isTaxable'],
        'is_customizable': value['isCustomizable'],
        'is_personalizable': value['isPersonalizable'],
        'personalization_is_required': value['personalizationIsRequired'],
        'personalization_char_count_max': value['personalizationCharCountMax'],
        'personalization_instructions': value['personalizationInstructions'],
        'listing_type': value['listingType'],
        'tags': value['tags'],
        'materials': value['materials'],
        'shipping_profile_id': value['shippingProfileId'],
        'return_policy_id': value['returnPolicyId'],
        'processing_min': value['processingMin'],
        'processing_max': value['processingMax'],
        'who_made': value['whoMade'],
        'when_made': value['whenMade'],
        'is_supply': value['isSupply'],
        'item_weight': value['itemWeight'],
        'item_weight_unit': value['itemWeightUnit'],
        'item_length': value['itemLength'],
        'item_width': value['itemWidth'],
        'item_height': value['itemHeight'],
        'item_dimensions_unit': value['itemDimensionsUnit'],
        'is_private': value['isPrivate'],
        'style': value['style'],
        'file_data': value['fileData'],
        'has_variations': value['hasVariations'],
        'should_auto_renew': value['shouldAutoRenew'],
        'language': value['language'],
        'price': MoneyToJSON(value['price']),
        'taxonomy_id': value['taxonomyId'],
        'shipping_profile': ShopShippingProfileToJSON(value['shippingProfile']),
        'user': UserToJSON(value['user']),
        'shop': ShopToJSON(value['shop']),
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(ListingImageToJSON)),
        'videos': value['videos'] == null ? undefined : ((value['videos'] as Array<any>).map(ListingVideoToJSON)),
        'inventory': ListingInventoryToJSON(value['inventory']),
        'production_partners': value['productionPartners'] == null ? undefined : ((value['productionPartners'] as Array<any>).map(ShopProductionPartnerToJSON)),
        'skus': value['skus'],
        'translations': ListingTranslationsToJSON(value['translations']),
        'views': value['views'],
    };
}

