/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorSchema,
  PaymentAccountLedgerEntries,
  PaymentAccountLedgerEntry,
} from '../models/index';
import {
    ErrorSchemaFromJSON,
    ErrorSchemaToJSON,
    PaymentAccountLedgerEntriesFromJSON,
    PaymentAccountLedgerEntriesToJSON,
    PaymentAccountLedgerEntryFromJSON,
    PaymentAccountLedgerEntryToJSON,
} from '../models/index';

export interface GetShopPaymentAccountLedgerEntriesRequest {
    shopId: number;
    minCreated: number;
    maxCreated: number;
    limit?: number;
    offset?: number;
}

export interface GetShopPaymentAccountLedgerEntryRequest {
    shopId: number;
    ledgerEntryId: number;
}

/**
 * 
 */
export class LedgerEntryApi extends runtime.BaseAPI {

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Get a Shop Payment Account Ledger\'s Entries
     */
    async getShopPaymentAccountLedgerEntriesRaw(requestParameters: GetShopPaymentAccountLedgerEntriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaymentAccountLedgerEntries>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling getShopPaymentAccountLedgerEntries().'
            );
        }

        if (requestParameters['minCreated'] == null) {
            throw new runtime.RequiredError(
                'minCreated',
                'Required parameter "minCreated" was null or undefined when calling getShopPaymentAccountLedgerEntries().'
            );
        }

        if (requestParameters['maxCreated'] == null) {
            throw new runtime.RequiredError(
                'maxCreated',
                'Required parameter "maxCreated" was null or undefined when calling getShopPaymentAccountLedgerEntries().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['minCreated'] != null) {
            queryParameters['min_created'] = requestParameters['minCreated'];
        }

        if (requestParameters['maxCreated'] != null) {
            queryParameters['max_created'] = requestParameters['maxCreated'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["transactions_r"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/payment-account/ledger-entries`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaymentAccountLedgerEntriesFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Get a Shop Payment Account Ledger\'s Entries
     */
    async getShopPaymentAccountLedgerEntries(requestParameters: GetShopPaymentAccountLedgerEntriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaymentAccountLedgerEntries> {
        const response = await this.getShopPaymentAccountLedgerEntriesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Get a single Shop Payment Account Ledger\'s Entry
     */
    async getShopPaymentAccountLedgerEntryRaw(requestParameters: GetShopPaymentAccountLedgerEntryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaymentAccountLedgerEntry>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling getShopPaymentAccountLedgerEntry().'
            );
        }

        if (requestParameters['ledgerEntryId'] == null) {
            throw new runtime.RequiredError(
                'ledgerEntryId',
                'Required parameter "ledgerEntryId" was null or undefined when calling getShopPaymentAccountLedgerEntry().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["transactions_r"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/payment-account/ledger-entries/{ledger_entry_id}`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"ledger_entry_id"}}`, encodeURIComponent(String(requestParameters['ledgerEntryId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaymentAccountLedgerEntryFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Get a single Shop Payment Account Ledger\'s Entry
     */
    async getShopPaymentAccountLedgerEntry(requestParameters: GetShopPaymentAccountLedgerEntryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaymentAccountLedgerEntry> {
        const response = await this.getShopPaymentAccountLedgerEntryRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
