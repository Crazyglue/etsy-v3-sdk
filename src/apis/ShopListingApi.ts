/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorSchema,
  ListingPropertyValue,
  ListingPropertyValues,
  ShopListing,
  ShopListingWithAssociations,
  ShopListings,
  ShopListingsWithAssociations,
} from '../models/index';
import {
    ErrorSchemaFromJSON,
    ErrorSchemaToJSON,
    ListingPropertyValueFromJSON,
    ListingPropertyValueToJSON,
    ListingPropertyValuesFromJSON,
    ListingPropertyValuesToJSON,
    ShopListingFromJSON,
    ShopListingToJSON,
    ShopListingWithAssociationsFromJSON,
    ShopListingWithAssociationsToJSON,
    ShopListingsFromJSON,
    ShopListingsToJSON,
    ShopListingsWithAssociationsFromJSON,
    ShopListingsWithAssociationsToJSON,
} from '../models/index';

export interface CreateDraftListingRequest {
    shopId: number;
    quantity: number;
    title: string;
    description: string;
    price: number;
    whoMade: CreateDraftListingWhoMadeEnum;
    whenMade: CreateDraftListingWhenMadeEnum;
    taxonomyId: number;
    shippingProfileId?: number | null;
    returnPolicyId?: number | null;
    materials?: Array<string> | null;
    shopSectionId?: number | null;
    processingMin?: number | null;
    processingMax?: number | null;
    tags?: Array<string> | null;
    styles?: Array<string> | null;
    itemWeight?: number | null;
    itemLength?: number | null;
    itemWidth?: number | null;
    itemHeight?: number | null;
    itemWeightUnit?: CreateDraftListingItemWeightUnitEnum;
    itemDimensionsUnit?: CreateDraftListingItemDimensionsUnitEnum;
    isPersonalizable?: boolean;
    personalizationIsRequired?: boolean;
    personalizationCharCountMax?: number;
    personalizationInstructions?: string;
    productionPartnerIds?: Array<number> | null;
    imageIds?: Array<number> | null;
    isSupply?: boolean;
    isCustomizable?: boolean;
    shouldAutoRenew?: boolean;
    isTaxable?: boolean;
    type?: CreateDraftListingTypeEnum;
}

export interface DeleteListingRequest {
    listingId: number;
}

export interface DeleteListingPropertyRequest {
    shopId: number;
    listingId: number;
    propertyId: number;
}

export interface FindAllActiveListingsByShopRequest {
    shopId: number;
    limit?: number;
    sortOn?: FindAllActiveListingsByShopSortOnEnum;
    sortOrder?: FindAllActiveListingsByShopSortOrderEnum;
    offset?: number;
    keywords?: string;
}

export interface FindAllListingsActiveRequest {
    limit?: number;
    offset?: number;
    keywords?: string;
    sortOn?: FindAllListingsActiveSortOnEnum;
    sortOrder?: FindAllListingsActiveSortOrderEnum;
    minPrice?: number;
    maxPrice?: number;
    taxonomyId?: number;
    shopLocation?: string;
}

export interface GetFeaturedListingsByShopRequest {
    shopId: number;
    limit?: number;
    offset?: number;
}

export interface GetListingRequest {
    listingId: number;
    includes?: Array<GetListingIncludesEnum>;
    language?: string;
}

export interface GetListingPropertiesRequest {
    shopId: number;
    listingId: number;
}

export interface GetListingPropertyRequest {
    listingId: number;
    propertyId: number;
}

export interface GetListingsByListingIdsRequest {
    listingIds: Array<number>;
    includes?: Array<GetListingsByListingIdsIncludesEnum>;
}

export interface GetListingsByShopRequest {
    shopId: number;
    state?: GetListingsByShopStateEnum;
    limit?: number;
    offset?: number;
    sortOn?: GetListingsByShopSortOnEnum;
    sortOrder?: GetListingsByShopSortOrderEnum;
    includes?: Array<GetListingsByShopIncludesEnum>;
}

export interface GetListingsByShopReceiptRequest {
    receiptId: number;
    shopId: number;
    limit?: number;
    offset?: number;
}

export interface GetListingsByShopReturnPolicyRequest {
    returnPolicyId: number;
    shopId: number;
}

export interface GetListingsByShopSectionIdRequest {
    shopId: number;
    shopSectionIds: Array<number>;
    limit?: number;
    offset?: number;
    sortOn?: GetListingsByShopSectionIdSortOnEnum;
    sortOrder?: GetListingsByShopSectionIdSortOrderEnum;
}

export interface UpdateListingRequest {
    shopId: number;
    listingId: number;
    imageIds?: Array<number>;
    title?: string;
    description?: string;
    materials?: Array<string> | null;
    shouldAutoRenew?: boolean;
    shippingProfileId?: number | null;
    returnPolicyId?: number | null;
    shopSectionId?: number | null;
    itemWeight?: number | null;
    itemLength?: number | null;
    itemWidth?: number | null;
    itemHeight?: number | null;
    itemWeightUnit?: UpdateListingItemWeightUnitEnum;
    itemDimensionsUnit?: UpdateListingItemDimensionsUnitEnum;
    isTaxable?: boolean;
    taxonomyId?: number;
    tags?: Array<string> | null;
    whoMade?: UpdateListingWhoMadeEnum;
    whenMade?: UpdateListingWhenMadeEnum;
    featuredRank?: number | null;
    isPersonalizable?: boolean;
    personalizationIsRequired?: boolean;
    personalizationCharCountMax?: number;
    personalizationInstructions?: string;
    state?: UpdateListingStateEnum;
    isSupply?: boolean;
    productionPartnerIds?: Array<number> | null;
    type?: UpdateListingTypeEnum;
}

export interface UpdateListingDeprecatedRequest {
    shopId: number;
    listingId: number;
    imageIds?: Array<number>;
    title?: string;
    description?: string;
    materials?: Array<string> | null;
    shouldAutoRenew?: boolean;
    shippingProfileId?: number | null;
    shopSectionId?: number | null;
    itemWeight?: number | null;
    itemLength?: number | null;
    itemWidth?: number | null;
    itemHeight?: number | null;
    itemWeightUnit?: UpdateListingDeprecatedItemWeightUnitEnum;
    itemDimensionsUnit?: UpdateListingDeprecatedItemDimensionsUnitEnum;
    isTaxable?: boolean;
    taxonomyId?: number;
    tags?: Array<string> | null;
    whoMade?: UpdateListingDeprecatedWhoMadeEnum;
    whenMade?: UpdateListingDeprecatedWhenMadeEnum;
    featuredRank?: number | null;
    isPersonalizable?: boolean;
    personalizationIsRequired?: boolean;
    personalizationCharCountMax?: number;
    personalizationInstructions?: string;
    state?: UpdateListingDeprecatedStateEnum;
    isSupply?: boolean;
    productionPartnerIds?: Array<number> | null;
    type?: UpdateListingDeprecatedTypeEnum;
}

export interface UpdateListingPropertyRequest {
    shopId: number;
    listingId: number;
    propertyId: number;
    valueIds: Array<number>;
    values: Array<string>;
    scaleId?: number;
}

/**
 * 
 */
export class ShopListingApi extends runtime.BaseAPI {

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Creates a physical draft [listing](/documentation/reference#tag/ShopListing) product in a shop on the Etsy channel.
     */
    async createDraftListingRaw(requestParameters: CreateDraftListingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopListing>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling createDraftListing().'
            );
        }

        if (requestParameters['quantity'] == null) {
            throw new runtime.RequiredError(
                'quantity',
                'Required parameter "quantity" was null or undefined when calling createDraftListing().'
            );
        }

        if (requestParameters['title'] == null) {
            throw new runtime.RequiredError(
                'title',
                'Required parameter "title" was null or undefined when calling createDraftListing().'
            );
        }

        if (requestParameters['description'] == null) {
            throw new runtime.RequiredError(
                'description',
                'Required parameter "description" was null or undefined when calling createDraftListing().'
            );
        }

        if (requestParameters['price'] == null) {
            throw new runtime.RequiredError(
                'price',
                'Required parameter "price" was null or undefined when calling createDraftListing().'
            );
        }

        if (requestParameters['whoMade'] == null) {
            throw new runtime.RequiredError(
                'whoMade',
                'Required parameter "whoMade" was null or undefined when calling createDraftListing().'
            );
        }

        if (requestParameters['whenMade'] == null) {
            throw new runtime.RequiredError(
                'whenMade',
                'Required parameter "whenMade" was null or undefined when calling createDraftListing().'
            );
        }

        if (requestParameters['taxonomyId'] == null) {
            throw new runtime.RequiredError(
                'taxonomyId',
                'Required parameter "taxonomyId" was null or undefined when calling createDraftListing().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["listings_w"]);
        }

        const consumes: runtime.Consume[] = [
            { contentType: 'application/x-www-form-urlencoded' },
        ];
        // @ts-ignore: canConsumeForm may be unused
        const canConsumeForm = runtime.canConsumeForm(consumes);

        let formParams: { append(param: string, value: any): any };
        let useForm = false;
        if (useForm) {
            formParams = new FormData();
        } else {
            formParams = new URLSearchParams();
        }

        if (requestParameters['quantity'] != null) {
            formParams.append('quantity', requestParameters['quantity'] as any);
        }

        if (requestParameters['title'] != null) {
            formParams.append('title', requestParameters['title'] as any);
        }

        if (requestParameters['description'] != null) {
            formParams.append('description', requestParameters['description'] as any);
        }

        if (requestParameters['price'] != null) {
            formParams.append('price', requestParameters['price'] as any);
        }

        if (requestParameters['whoMade'] != null) {
            formParams.append('who_made', requestParameters['whoMade'] as any);
        }

        if (requestParameters['whenMade'] != null) {
            formParams.append('when_made', requestParameters['whenMade'] as any);
        }

        if (requestParameters['taxonomyId'] != null) {
            formParams.append('taxonomy_id', requestParameters['taxonomyId'] as any);
        }

        if (requestParameters['shippingProfileId'] != null) {
            formParams.append('shipping_profile_id', requestParameters['shippingProfileId'] as any);
        }

        if (requestParameters['returnPolicyId'] != null) {
            formParams.append('return_policy_id', requestParameters['returnPolicyId'] as any);
        }

        if (requestParameters['materials'] != null) {
            formParams.append('materials', requestParameters['materials']!.join(runtime.COLLECTION_FORMATS["csv"]));
        }

        if (requestParameters['shopSectionId'] != null) {
            formParams.append('shop_section_id', requestParameters['shopSectionId'] as any);
        }

        if (requestParameters['processingMin'] != null) {
            formParams.append('processing_min', requestParameters['processingMin'] as any);
        }

        if (requestParameters['processingMax'] != null) {
            formParams.append('processing_max', requestParameters['processingMax'] as any);
        }

        if (requestParameters['tags'] != null) {
            formParams.append('tags', requestParameters['tags']!.join(runtime.COLLECTION_FORMATS["csv"]));
        }

        if (requestParameters['styles'] != null) {
            formParams.append('styles', requestParameters['styles']!.join(runtime.COLLECTION_FORMATS["csv"]));
        }

        if (requestParameters['itemWeight'] != null) {
            formParams.append('item_weight', requestParameters['itemWeight'] as any);
        }

        if (requestParameters['itemLength'] != null) {
            formParams.append('item_length', requestParameters['itemLength'] as any);
        }

        if (requestParameters['itemWidth'] != null) {
            formParams.append('item_width', requestParameters['itemWidth'] as any);
        }

        if (requestParameters['itemHeight'] != null) {
            formParams.append('item_height', requestParameters['itemHeight'] as any);
        }

        if (requestParameters['itemWeightUnit'] != null) {
            formParams.append('item_weight_unit', requestParameters['itemWeightUnit'] as any);
        }

        if (requestParameters['itemDimensionsUnit'] != null) {
            formParams.append('item_dimensions_unit', requestParameters['itemDimensionsUnit'] as any);
        }

        if (requestParameters['isPersonalizable'] != null) {
            formParams.append('is_personalizable', requestParameters['isPersonalizable'] as any);
        }

        if (requestParameters['personalizationIsRequired'] != null) {
            formParams.append('personalization_is_required', requestParameters['personalizationIsRequired'] as any);
        }

        if (requestParameters['personalizationCharCountMax'] != null) {
            formParams.append('personalization_char_count_max', requestParameters['personalizationCharCountMax'] as any);
        }

        if (requestParameters['personalizationInstructions'] != null) {
            formParams.append('personalization_instructions', requestParameters['personalizationInstructions'] as any);
        }

        if (requestParameters['productionPartnerIds'] != null) {
            formParams.append('production_partner_ids', requestParameters['productionPartnerIds']!.join(runtime.COLLECTION_FORMATS["csv"]));
        }

        if (requestParameters['imageIds'] != null) {
            formParams.append('image_ids', requestParameters['imageIds']!.join(runtime.COLLECTION_FORMATS["csv"]));
        }

        if (requestParameters['isSupply'] != null) {
            formParams.append('is_supply', requestParameters['isSupply'] as any);
        }

        if (requestParameters['isCustomizable'] != null) {
            formParams.append('is_customizable', requestParameters['isCustomizable'] as any);
        }

        if (requestParameters['shouldAutoRenew'] != null) {
            formParams.append('should_auto_renew', requestParameters['shouldAutoRenew'] as any);
        }

        if (requestParameters['isTaxable'] != null) {
            formParams.append('is_taxable', requestParameters['isTaxable'] as any);
        }

        if (requestParameters['type'] != null) {
            formParams.append('type', requestParameters['type'] as any);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/listings`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: formParams,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopListingFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Creates a physical draft [listing](/documentation/reference#tag/ShopListing) product in a shop on the Etsy channel.
     */
    async createDraftListing(requestParameters: CreateDraftListingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopListing> {
        const response = await this.createDraftListingRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Open API V3 endpoint to delete a ShopListing. A ShopListing can be deleted only if the state is one of the following:  SOLD_OUT, DRAFT, EXPIRED, INACTIVE, ACTIVE and is_available or ACTIVE and has seller flags:  SUPRESSED (frozen), VACATION, CUSTOM_SHOPS (pattern), SELL_ON_FACEBOOK
     */
    async deleteListingRaw(requestParameters: DeleteListingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['listingId'] == null) {
            throw new runtime.RequiredError(
                'listingId',
                'Required parameter "listingId" was null or undefined when calling deleteListing().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["listings_d"]);
        }

        const response = await this.request({
            path: `/v3/application/listings/{listing_id}`.replace(`{${"listing_id"}}`, encodeURIComponent(String(requestParameters['listingId']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Open API V3 endpoint to delete a ShopListing. A ShopListing can be deleted only if the state is one of the following:  SOLD_OUT, DRAFT, EXPIRED, INACTIVE, ACTIVE and is_available or ACTIVE and has seller flags:  SUPRESSED (frozen), VACATION, CUSTOM_SHOPS (pattern), SELL_ON_FACEBOOK
     */
    async deleteListing(requestParameters: DeleteListingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteListingRaw(requestParameters, initOverrides);
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Deletes a property for a Listing.
     */
    async deleteListingPropertyRaw(requestParameters: DeleteListingPropertyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling deleteListingProperty().'
            );
        }

        if (requestParameters['listingId'] == null) {
            throw new runtime.RequiredError(
                'listingId',
                'Required parameter "listingId" was null or undefined when calling deleteListingProperty().'
            );
        }

        if (requestParameters['propertyId'] == null) {
            throw new runtime.RequiredError(
                'propertyId',
                'Required parameter "propertyId" was null or undefined when calling deleteListingProperty().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["listings_w"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/listings/{listing_id}/properties/{property_id}`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"listing_id"}}`, encodeURIComponent(String(requestParameters['listingId']))).replace(`{${"property_id"}}`, encodeURIComponent(String(requestParameters['propertyId']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Deletes a property for a Listing.
     */
    async deleteListingProperty(requestParameters: DeleteListingPropertyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteListingPropertyRaw(requestParameters, initOverrides);
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a list of all active listings on Etsy in a specific shop, paginated by listing creation date.
     */
    async findAllActiveListingsByShopRaw(requestParameters: FindAllActiveListingsByShopRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopListings>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling findAllActiveListingsByShop().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['sortOn'] != null) {
            queryParameters['sort_on'] = requestParameters['sortOn'];
        }

        if (requestParameters['sortOrder'] != null) {
            queryParameters['sort_order'] = requestParameters['sortOrder'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        if (requestParameters['keywords'] != null) {
            queryParameters['keywords'] = requestParameters['keywords'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/listings/active`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopListingsFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a list of all active listings on Etsy in a specific shop, paginated by listing creation date.
     */
    async findAllActiveListingsByShop(requestParameters: FindAllActiveListingsByShopRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopListings> {
        const response = await this.findAllActiveListingsByShopRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  A list of all active listings on Etsy paginated by their creation date. Without sort_order listings will be returned newest-first by default.
     */
    async findAllListingsActiveRaw(requestParameters: FindAllListingsActiveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopListings>> {
        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        if (requestParameters['keywords'] != null) {
            queryParameters['keywords'] = requestParameters['keywords'];
        }

        if (requestParameters['sortOn'] != null) {
            queryParameters['sort_on'] = requestParameters['sortOn'];
        }

        if (requestParameters['sortOrder'] != null) {
            queryParameters['sort_order'] = requestParameters['sortOrder'];
        }

        if (requestParameters['minPrice'] != null) {
            queryParameters['min_price'] = requestParameters['minPrice'];
        }

        if (requestParameters['maxPrice'] != null) {
            queryParameters['max_price'] = requestParameters['maxPrice'];
        }

        if (requestParameters['taxonomyId'] != null) {
            queryParameters['taxonomy_id'] = requestParameters['taxonomyId'];
        }

        if (requestParameters['shopLocation'] != null) {
            queryParameters['shop_location'] = requestParameters['shopLocation'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        const response = await this.request({
            path: `/v3/application/listings/active`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopListingsFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  A list of all active listings on Etsy paginated by their creation date. Without sort_order listings will be returned newest-first by default.
     */
    async findAllListingsActive(requestParameters: FindAllListingsActiveRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopListings> {
        const response = await this.findAllListingsActiveRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves Listings associated to a Shop that are featured.
     */
    async getFeaturedListingsByShopRaw(requestParameters: GetFeaturedListingsByShopRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopListings>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling getFeaturedListingsByShop().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/listings/featured`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopListingsFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves Listings associated to a Shop that are featured.
     */
    async getFeaturedListingsByShop(requestParameters: GetFeaturedListingsByShopRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopListings> {
        const response = await this.getFeaturedListingsByShopRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a listing record by listing ID.
     */
    async getListingRaw(requestParameters: GetListingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopListingWithAssociations>> {
        if (requestParameters['listingId'] == null) {
            throw new runtime.RequiredError(
                'listingId',
                'Required parameter "listingId" was null or undefined when calling getListing().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['includes'] != null) {
            queryParameters['includes'] = requestParameters['includes'];
        }

        if (requestParameters['language'] != null) {
            queryParameters['language'] = requestParameters['language'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        const response = await this.request({
            path: `/v3/application/listings/{listing_id}`.replace(`{${"listing_id"}}`, encodeURIComponent(String(requestParameters['listingId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopListingWithAssociationsFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a listing record by listing ID.
     */
    async getListing(requestParameters: GetListingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopListingWithAssociations> {
        const response = await this.getListingRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Get a listing\'s properties
     */
    async getListingPropertiesRaw(requestParameters: GetListingPropertiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListingPropertyValues>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling getListingProperties().'
            );
        }

        if (requestParameters['listingId'] == null) {
            throw new runtime.RequiredError(
                'listingId',
                'Required parameter "listingId" was null or undefined when calling getListingProperties().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/listings/{listing_id}/properties`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"listing_id"}}`, encodeURIComponent(String(requestParameters['listingId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListingPropertyValuesFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Get a listing\'s properties
     */
    async getListingProperties(requestParameters: GetListingPropertiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListingPropertyValues> {
        const response = await this.getListingPropertiesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationTertiary wt-mr-xs-2\"> Feedback only </span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Give feedback</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">Development for this endpoint is in progress. It will only return a 501 response.</p></div>  Retrieves a listing\'s property
     */
    async getListingPropertyRaw(requestParameters: GetListingPropertyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListingPropertyValue>> {
        if (requestParameters['listingId'] == null) {
            throw new runtime.RequiredError(
                'listingId',
                'Required parameter "listingId" was null or undefined when calling getListingProperty().'
            );
        }

        if (requestParameters['propertyId'] == null) {
            throw new runtime.RequiredError(
                'propertyId',
                'Required parameter "propertyId" was null or undefined when calling getListingProperty().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        const response = await this.request({
            path: `/v3/application/listings/{listing_id}/properties/{property_id}`.replace(`{${"listing_id"}}`, encodeURIComponent(String(requestParameters['listingId']))).replace(`{${"property_id"}}`, encodeURIComponent(String(requestParameters['propertyId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListingPropertyValueFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationTertiary wt-mr-xs-2\"> Feedback only </span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Give feedback</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">Development for this endpoint is in progress. It will only return a 501 response.</p></div>  Retrieves a listing\'s property
     */
    async getListingProperty(requestParameters: GetListingPropertyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListingPropertyValue> {
        const response = await this.getListingPropertyRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Allows to query multiple listing ids at once. Limit 100 ids maximum per query.
     */
    async getListingsByListingIdsRaw(requestParameters: GetListingsByListingIdsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopListingsWithAssociations>> {
        if (requestParameters['listingIds'] == null) {
            throw new runtime.RequiredError(
                'listingIds',
                'Required parameter "listingIds" was null or undefined when calling getListingsByListingIds().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['listingIds'] != null) {
            queryParameters['listing_ids'] = requestParameters['listingIds'];
        }

        if (requestParameters['includes'] != null) {
            queryParameters['includes'] = requestParameters['includes'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        const response = await this.request({
            path: `/v3/application/listings/batch`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopListingsWithAssociationsFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Allows to query multiple listing ids at once. Limit 100 ids maximum per query.
     */
    async getListingsByListingIds(requestParameters: GetListingsByListingIdsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopListingsWithAssociations> {
        const response = await this.getListingsByListingIdsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Endpoint to list Listings that belong to a Shop. Listings can be filtered using the \'state\' param.
     */
    async getListingsByShopRaw(requestParameters: GetListingsByShopRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopListingsWithAssociations>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling getListingsByShop().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['state'] != null) {
            queryParameters['state'] = requestParameters['state'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        if (requestParameters['sortOn'] != null) {
            queryParameters['sort_on'] = requestParameters['sortOn'];
        }

        if (requestParameters['sortOrder'] != null) {
            queryParameters['sort_order'] = requestParameters['sortOrder'];
        }

        if (requestParameters['includes'] != null) {
            queryParameters['includes'] = requestParameters['includes'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["listings_r"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/listings`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopListingsWithAssociationsFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Endpoint to list Listings that belong to a Shop. Listings can be filtered using the \'state\' param.
     */
    async getListingsByShop(requestParameters: GetListingsByShopRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopListingsWithAssociations> {
        const response = await this.getListingsByShopRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Gets all listings associated with a receipt.
     */
    async getListingsByShopReceiptRaw(requestParameters: GetListingsByShopReceiptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopListings>> {
        if (requestParameters['receiptId'] == null) {
            throw new runtime.RequiredError(
                'receiptId',
                'Required parameter "receiptId" was null or undefined when calling getListingsByShopReceipt().'
            );
        }

        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling getListingsByShopReceipt().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["transactions_r"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/receipts/{receipt_id}/listings`.replace(`{${"receipt_id"}}`, encodeURIComponent(String(requestParameters['receiptId']))).replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopListingsFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Gets all listings associated with a receipt.
     */
    async getListingsByShopReceipt(requestParameters: GetListingsByShopReceiptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopListings> {
        const response = await this.getListingsByShopReceiptRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Gets all listings associated with a Return Policy.
     */
    async getListingsByShopReturnPolicyRaw(requestParameters: GetListingsByShopReturnPolicyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopListings>> {
        if (requestParameters['returnPolicyId'] == null) {
            throw new runtime.RequiredError(
                'returnPolicyId',
                'Required parameter "returnPolicyId" was null or undefined when calling getListingsByShopReturnPolicy().'
            );
        }

        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling getListingsByShopReturnPolicy().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["listings_r"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/policies/return/{return_policy_id}/listings`.replace(`{${"return_policy_id"}}`, encodeURIComponent(String(requestParameters['returnPolicyId']))).replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopListingsFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Gets all listings associated with a Return Policy.
     */
    async getListingsByShopReturnPolicy(requestParameters: GetListingsByShopReturnPolicyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopListings> {
        const response = await this.getListingsByShopReturnPolicyRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves all the listings from the section of a specific shop.
     */
    async getListingsByShopSectionIdRaw(requestParameters: GetListingsByShopSectionIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopListings>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling getListingsByShopSectionId().'
            );
        }

        if (requestParameters['shopSectionIds'] == null) {
            throw new runtime.RequiredError(
                'shopSectionIds',
                'Required parameter "shopSectionIds" was null or undefined when calling getListingsByShopSectionId().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['shopSectionIds'] != null) {
            queryParameters['shop_section_ids'] = requestParameters['shopSectionIds'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        if (requestParameters['sortOn'] != null) {
            queryParameters['sort_on'] = requestParameters['sortOn'];
        }

        if (requestParameters['sortOrder'] != null) {
            queryParameters['sort_order'] = requestParameters['sortOrder'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/shop-sections/listings`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopListingsFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves all the listings from the section of a specific shop.
     */
    async getListingsByShopSectionId(requestParameters: GetListingsByShopSectionIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopListings> {
        const response = await this.getListingsByShopSectionIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Updates a listing, identified by a listing ID, for a specific shop identified by a shop ID. Note that this is a PATCH method type. When activating, or manually renewing a physical listing, the shipping profile referenced by the `shipping_profile_id`, and all of its fields, along with its entries and upgrades must be complete and valid. If the shipping profile is not complete and valid, we will throw an exception with an error message that guides the request sender to update whatever data is bad.  Draft digital listings that are not made to order must have a file upload associated with it to be activated. If the listing is made to order, the file upload is not required.
     */
    async updateListingRaw(requestParameters: UpdateListingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopListing>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling updateListing().'
            );
        }

        if (requestParameters['listingId'] == null) {
            throw new runtime.RequiredError(
                'listingId',
                'Required parameter "listingId" was null or undefined when calling updateListing().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["listings_w"]);
        }

        const consumes: runtime.Consume[] = [
            { contentType: 'application/x-www-form-urlencoded' },
        ];
        // @ts-ignore: canConsumeForm may be unused
        const canConsumeForm = runtime.canConsumeForm(consumes);

        let formParams: { append(param: string, value: any): any };
        let useForm = false;
        if (useForm) {
            formParams = new FormData();
        } else {
            formParams = new URLSearchParams();
        }

        if (requestParameters['imageIds'] != null) {
            formParams.append('image_ids', requestParameters['imageIds']!.join(runtime.COLLECTION_FORMATS["csv"]));
        }

        if (requestParameters['title'] != null) {
            formParams.append('title', requestParameters['title'] as any);
        }

        if (requestParameters['description'] != null) {
            formParams.append('description', requestParameters['description'] as any);
        }

        if (requestParameters['materials'] != null) {
            formParams.append('materials', requestParameters['materials']!.join(runtime.COLLECTION_FORMATS["csv"]));
        }

        if (requestParameters['shouldAutoRenew'] != null) {
            formParams.append('should_auto_renew', requestParameters['shouldAutoRenew'] as any);
        }

        if (requestParameters['shippingProfileId'] != null) {
            formParams.append('shipping_profile_id', requestParameters['shippingProfileId'] as any);
        }

        if (requestParameters['returnPolicyId'] != null) {
            formParams.append('return_policy_id', requestParameters['returnPolicyId'] as any);
        }

        if (requestParameters['shopSectionId'] != null) {
            formParams.append('shop_section_id', requestParameters['shopSectionId'] as any);
        }

        if (requestParameters['itemWeight'] != null) {
            formParams.append('item_weight', requestParameters['itemWeight'] as any);
        }

        if (requestParameters['itemLength'] != null) {
            formParams.append('item_length', requestParameters['itemLength'] as any);
        }

        if (requestParameters['itemWidth'] != null) {
            formParams.append('item_width', requestParameters['itemWidth'] as any);
        }

        if (requestParameters['itemHeight'] != null) {
            formParams.append('item_height', requestParameters['itemHeight'] as any);
        }

        if (requestParameters['itemWeightUnit'] != null) {
            formParams.append('item_weight_unit', requestParameters['itemWeightUnit'] as any);
        }

        if (requestParameters['itemDimensionsUnit'] != null) {
            formParams.append('item_dimensions_unit', requestParameters['itemDimensionsUnit'] as any);
        }

        if (requestParameters['isTaxable'] != null) {
            formParams.append('is_taxable', requestParameters['isTaxable'] as any);
        }

        if (requestParameters['taxonomyId'] != null) {
            formParams.append('taxonomy_id', requestParameters['taxonomyId'] as any);
        }

        if (requestParameters['tags'] != null) {
            formParams.append('tags', requestParameters['tags']!.join(runtime.COLLECTION_FORMATS["csv"]));
        }

        if (requestParameters['whoMade'] != null) {
            formParams.append('who_made', requestParameters['whoMade'] as any);
        }

        if (requestParameters['whenMade'] != null) {
            formParams.append('when_made', requestParameters['whenMade'] as any);
        }

        if (requestParameters['featuredRank'] != null) {
            formParams.append('featured_rank', requestParameters['featuredRank'] as any);
        }

        if (requestParameters['isPersonalizable'] != null) {
            formParams.append('is_personalizable', requestParameters['isPersonalizable'] as any);
        }

        if (requestParameters['personalizationIsRequired'] != null) {
            formParams.append('personalization_is_required', requestParameters['personalizationIsRequired'] as any);
        }

        if (requestParameters['personalizationCharCountMax'] != null) {
            formParams.append('personalization_char_count_max', requestParameters['personalizationCharCountMax'] as any);
        }

        if (requestParameters['personalizationInstructions'] != null) {
            formParams.append('personalization_instructions', requestParameters['personalizationInstructions'] as any);
        }

        if (requestParameters['state'] != null) {
            formParams.append('state', requestParameters['state'] as any);
        }

        if (requestParameters['isSupply'] != null) {
            formParams.append('is_supply', requestParameters['isSupply'] as any);
        }

        if (requestParameters['productionPartnerIds'] != null) {
            formParams.append('production_partner_ids', requestParameters['productionPartnerIds']!.join(runtime.COLLECTION_FORMATS["csv"]));
        }

        if (requestParameters['type'] != null) {
            formParams.append('type', requestParameters['type'] as any);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/listings/{listing_id}`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"listing_id"}}`, encodeURIComponent(String(requestParameters['listingId']))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: formParams,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopListingFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Updates a listing, identified by a listing ID, for a specific shop identified by a shop ID. Note that this is a PATCH method type. When activating, or manually renewing a physical listing, the shipping profile referenced by the `shipping_profile_id`, and all of its fields, along with its entries and upgrades must be complete and valid. If the shipping profile is not complete and valid, we will throw an exception with an error message that guides the request sender to update whatever data is bad.  Draft digital listings that are not made to order must have a file upload associated with it to be activated. If the listing is made to order, the file upload is not required.
     */
    async updateListing(requestParameters: UpdateListingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopListing> {
        const response = await this.updateListingRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Updates a listing, identified by a listing ID, for a specific shop identified by a shop ID. This endpoint will be removed in the near future in favor of `updateListing` PATCH version.
     */
    async updateListingDeprecatedRaw(requestParameters: UpdateListingDeprecatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopListing>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling updateListingDeprecated().'
            );
        }

        if (requestParameters['listingId'] == null) {
            throw new runtime.RequiredError(
                'listingId',
                'Required parameter "listingId" was null or undefined when calling updateListingDeprecated().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["listings_w"]);
        }

        const consumes: runtime.Consume[] = [
            { contentType: 'application/x-www-form-urlencoded' },
        ];
        // @ts-ignore: canConsumeForm may be unused
        const canConsumeForm = runtime.canConsumeForm(consumes);

        let formParams: { append(param: string, value: any): any };
        let useForm = false;
        if (useForm) {
            formParams = new FormData();
        } else {
            formParams = new URLSearchParams();
        }

        if (requestParameters['imageIds'] != null) {
            formParams.append('image_ids', requestParameters['imageIds']!.join(runtime.COLLECTION_FORMATS["csv"]));
        }

        if (requestParameters['title'] != null) {
            formParams.append('title', requestParameters['title'] as any);
        }

        if (requestParameters['description'] != null) {
            formParams.append('description', requestParameters['description'] as any);
        }

        if (requestParameters['materials'] != null) {
            formParams.append('materials', requestParameters['materials']!.join(runtime.COLLECTION_FORMATS["csv"]));
        }

        if (requestParameters['shouldAutoRenew'] != null) {
            formParams.append('should_auto_renew', requestParameters['shouldAutoRenew'] as any);
        }

        if (requestParameters['shippingProfileId'] != null) {
            formParams.append('shipping_profile_id', requestParameters['shippingProfileId'] as any);
        }

        if (requestParameters['shopSectionId'] != null) {
            formParams.append('shop_section_id', requestParameters['shopSectionId'] as any);
        }

        if (requestParameters['itemWeight'] != null) {
            formParams.append('item_weight', requestParameters['itemWeight'] as any);
        }

        if (requestParameters['itemLength'] != null) {
            formParams.append('item_length', requestParameters['itemLength'] as any);
        }

        if (requestParameters['itemWidth'] != null) {
            formParams.append('item_width', requestParameters['itemWidth'] as any);
        }

        if (requestParameters['itemHeight'] != null) {
            formParams.append('item_height', requestParameters['itemHeight'] as any);
        }

        if (requestParameters['itemWeightUnit'] != null) {
            formParams.append('item_weight_unit', requestParameters['itemWeightUnit'] as any);
        }

        if (requestParameters['itemDimensionsUnit'] != null) {
            formParams.append('item_dimensions_unit', requestParameters['itemDimensionsUnit'] as any);
        }

        if (requestParameters['isTaxable'] != null) {
            formParams.append('is_taxable', requestParameters['isTaxable'] as any);
        }

        if (requestParameters['taxonomyId'] != null) {
            formParams.append('taxonomy_id', requestParameters['taxonomyId'] as any);
        }

        if (requestParameters['tags'] != null) {
            formParams.append('tags', requestParameters['tags']!.join(runtime.COLLECTION_FORMATS["csv"]));
        }

        if (requestParameters['whoMade'] != null) {
            formParams.append('who_made', requestParameters['whoMade'] as any);
        }

        if (requestParameters['whenMade'] != null) {
            formParams.append('when_made', requestParameters['whenMade'] as any);
        }

        if (requestParameters['featuredRank'] != null) {
            formParams.append('featured_rank', requestParameters['featuredRank'] as any);
        }

        if (requestParameters['isPersonalizable'] != null) {
            formParams.append('is_personalizable', requestParameters['isPersonalizable'] as any);
        }

        if (requestParameters['personalizationIsRequired'] != null) {
            formParams.append('personalization_is_required', requestParameters['personalizationIsRequired'] as any);
        }

        if (requestParameters['personalizationCharCountMax'] != null) {
            formParams.append('personalization_char_count_max', requestParameters['personalizationCharCountMax'] as any);
        }

        if (requestParameters['personalizationInstructions'] != null) {
            formParams.append('personalization_instructions', requestParameters['personalizationInstructions'] as any);
        }

        if (requestParameters['state'] != null) {
            formParams.append('state', requestParameters['state'] as any);
        }

        if (requestParameters['isSupply'] != null) {
            formParams.append('is_supply', requestParameters['isSupply'] as any);
        }

        if (requestParameters['productionPartnerIds'] != null) {
            formParams.append('production_partner_ids', requestParameters['productionPartnerIds']!.join(runtime.COLLECTION_FORMATS["csv"]));
        }

        if (requestParameters['type'] != null) {
            formParams.append('type', requestParameters['type'] as any);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/listings/{listing_id}`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"listing_id"}}`, encodeURIComponent(String(requestParameters['listingId']))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: formParams,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopListingFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Updates a listing, identified by a listing ID, for a specific shop identified by a shop ID. This endpoint will be removed in the near future in favor of `updateListing` PATCH version.
     */
    async updateListingDeprecated(requestParameters: UpdateListingDeprecatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopListing> {
        const response = await this.updateListingDeprecatedRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Updates or populates the properties list defining product offerings for a listing. Each offering requires both a `value` and a `value_id` that are valid for a `scale_id` assigned to the listing or that you assign to the listing with this request.
     */
    async updateListingPropertyRaw(requestParameters: UpdateListingPropertyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListingPropertyValue>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling updateListingProperty().'
            );
        }

        if (requestParameters['listingId'] == null) {
            throw new runtime.RequiredError(
                'listingId',
                'Required parameter "listingId" was null or undefined when calling updateListingProperty().'
            );
        }

        if (requestParameters['propertyId'] == null) {
            throw new runtime.RequiredError(
                'propertyId',
                'Required parameter "propertyId" was null or undefined when calling updateListingProperty().'
            );
        }

        if (requestParameters['valueIds'] == null) {
            throw new runtime.RequiredError(
                'valueIds',
                'Required parameter "valueIds" was null or undefined when calling updateListingProperty().'
            );
        }

        if (requestParameters['values'] == null) {
            throw new runtime.RequiredError(
                'values',
                'Required parameter "values" was null or undefined when calling updateListingProperty().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["listings_w"]);
        }

        const consumes: runtime.Consume[] = [
            { contentType: 'application/x-www-form-urlencoded' },
        ];
        // @ts-ignore: canConsumeForm may be unused
        const canConsumeForm = runtime.canConsumeForm(consumes);

        let formParams: { append(param: string, value: any): any };
        let useForm = false;
        if (useForm) {
            formParams = new FormData();
        } else {
            formParams = new URLSearchParams();
        }

        if (requestParameters['valueIds'] != null) {
            formParams.append('value_ids', requestParameters['valueIds']!.join(runtime.COLLECTION_FORMATS["csv"]));
        }

        if (requestParameters['values'] != null) {
            formParams.append('values', requestParameters['values']!.join(runtime.COLLECTION_FORMATS["csv"]));
        }

        if (requestParameters['scaleId'] != null) {
            formParams.append('scale_id', requestParameters['scaleId'] as any);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/listings/{listing_id}/properties/{property_id}`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"listing_id"}}`, encodeURIComponent(String(requestParameters['listingId']))).replace(`{${"property_id"}}`, encodeURIComponent(String(requestParameters['propertyId']))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: formParams,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListingPropertyValueFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Updates or populates the properties list defining product offerings for a listing. Each offering requires both a `value` and a `value_id` that are valid for a `scale_id` assigned to the listing or that you assign to the listing with this request.
     */
    async updateListingProperty(requestParameters: UpdateListingPropertyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListingPropertyValue> {
        const response = await this.updateListingPropertyRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const CreateDraftListingWhoMadeEnum = {
    IDid: 'i_did',
    SomeoneElse: 'someone_else',
    Collective: 'collective'
} as const;
export type CreateDraftListingWhoMadeEnum = typeof CreateDraftListingWhoMadeEnum[keyof typeof CreateDraftListingWhoMadeEnum];
/**
 * @export
 */
export const CreateDraftListingWhenMadeEnum = {
    MadeToOrder: 'made_to_order',
    _20202025: '2020_2025',
    _20102019: '2010_2019',
    _20062009: '2006_2009',
    Before2006: 'before_2006',
    _20002005: '2000_2005',
    _1990s: '1990s',
    _1980s: '1980s',
    _1970s: '1970s',
    _1960s: '1960s',
    _1950s: '1950s',
    _1940s: '1940s',
    _1930s: '1930s',
    _1920s: '1920s',
    _1910s: '1910s',
    _1900s: '1900s',
    _1800s: '1800s',
    _1700s: '1700s',
    Before1700: 'before_1700'
} as const;
export type CreateDraftListingWhenMadeEnum = typeof CreateDraftListingWhenMadeEnum[keyof typeof CreateDraftListingWhenMadeEnum];
/**
 * @export
 */
export const CreateDraftListingItemWeightUnitEnum = {
    Oz: 'oz',
    Lb: 'lb',
    G: 'g',
    Kg: 'kg'
} as const;
export type CreateDraftListingItemWeightUnitEnum = typeof CreateDraftListingItemWeightUnitEnum[keyof typeof CreateDraftListingItemWeightUnitEnum];
/**
 * @export
 */
export const CreateDraftListingItemDimensionsUnitEnum = {
    In: 'in',
    Ft: 'ft',
    Mm: 'mm',
    Cm: 'cm',
    M: 'm',
    Yd: 'yd',
    Inches: 'inches'
} as const;
export type CreateDraftListingItemDimensionsUnitEnum = typeof CreateDraftListingItemDimensionsUnitEnum[keyof typeof CreateDraftListingItemDimensionsUnitEnum];
/**
 * @export
 */
export const CreateDraftListingTypeEnum = {
    Physical: 'physical',
    Download: 'download',
    Both: 'both'
} as const;
export type CreateDraftListingTypeEnum = typeof CreateDraftListingTypeEnum[keyof typeof CreateDraftListingTypeEnum];
/**
 * @export
 */
export const FindAllActiveListingsByShopSortOnEnum = {
    Created: 'created',
    Price: 'price',
    Updated: 'updated',
    Score: 'score'
} as const;
export type FindAllActiveListingsByShopSortOnEnum = typeof FindAllActiveListingsByShopSortOnEnum[keyof typeof FindAllActiveListingsByShopSortOnEnum];
/**
 * @export
 */
export const FindAllActiveListingsByShopSortOrderEnum = {
    Asc: 'asc',
    Ascending: 'ascending',
    Desc: 'desc',
    Descending: 'descending',
    Up: 'up',
    Down: 'down'
} as const;
export type FindAllActiveListingsByShopSortOrderEnum = typeof FindAllActiveListingsByShopSortOrderEnum[keyof typeof FindAllActiveListingsByShopSortOrderEnum];
/**
 * @export
 */
export const FindAllListingsActiveSortOnEnum = {
    Created: 'created',
    Price: 'price',
    Updated: 'updated',
    Score: 'score'
} as const;
export type FindAllListingsActiveSortOnEnum = typeof FindAllListingsActiveSortOnEnum[keyof typeof FindAllListingsActiveSortOnEnum];
/**
 * @export
 */
export const FindAllListingsActiveSortOrderEnum = {
    Asc: 'asc',
    Ascending: 'ascending',
    Desc: 'desc',
    Descending: 'descending',
    Up: 'up',
    Down: 'down'
} as const;
export type FindAllListingsActiveSortOrderEnum = typeof FindAllListingsActiveSortOrderEnum[keyof typeof FindAllListingsActiveSortOrderEnum];
/**
 * @export
 */
export const GetListingIncludesEnum = {
    Shipping: 'Shipping',
    Images: 'Images',
    Shop: 'Shop',
    User: 'User',
    Translations: 'Translations',
    Inventory: 'Inventory',
    Videos: 'Videos'
} as const;
export type GetListingIncludesEnum = typeof GetListingIncludesEnum[keyof typeof GetListingIncludesEnum];
/**
 * @export
 */
export const GetListingsByListingIdsIncludesEnum = {
    Shipping: 'Shipping',
    Images: 'Images',
    Shop: 'Shop',
    User: 'User',
    Translations: 'Translations',
    Inventory: 'Inventory',
    Videos: 'Videos'
} as const;
export type GetListingsByListingIdsIncludesEnum = typeof GetListingsByListingIdsIncludesEnum[keyof typeof GetListingsByListingIdsIncludesEnum];
/**
 * @export
 */
export const GetListingsByShopStateEnum = {
    Active: 'active',
    Inactive: 'inactive',
    SoldOut: 'sold_out',
    Draft: 'draft',
    Expired: 'expired'
} as const;
export type GetListingsByShopStateEnum = typeof GetListingsByShopStateEnum[keyof typeof GetListingsByShopStateEnum];
/**
 * @export
 */
export const GetListingsByShopSortOnEnum = {
    Created: 'created',
    Price: 'price',
    Updated: 'updated',
    Score: 'score'
} as const;
export type GetListingsByShopSortOnEnum = typeof GetListingsByShopSortOnEnum[keyof typeof GetListingsByShopSortOnEnum];
/**
 * @export
 */
export const GetListingsByShopSortOrderEnum = {
    Asc: 'asc',
    Ascending: 'ascending',
    Desc: 'desc',
    Descending: 'descending',
    Up: 'up',
    Down: 'down'
} as const;
export type GetListingsByShopSortOrderEnum = typeof GetListingsByShopSortOrderEnum[keyof typeof GetListingsByShopSortOrderEnum];
/**
 * @export
 */
export const GetListingsByShopIncludesEnum = {
    Shipping: 'Shipping',
    Images: 'Images',
    Shop: 'Shop',
    User: 'User',
    Translations: 'Translations',
    Inventory: 'Inventory',
    Videos: 'Videos'
} as const;
export type GetListingsByShopIncludesEnum = typeof GetListingsByShopIncludesEnum[keyof typeof GetListingsByShopIncludesEnum];
/**
 * @export
 */
export const GetListingsByShopSectionIdSortOnEnum = {
    Created: 'created',
    Price: 'price',
    Updated: 'updated',
    Score: 'score'
} as const;
export type GetListingsByShopSectionIdSortOnEnum = typeof GetListingsByShopSectionIdSortOnEnum[keyof typeof GetListingsByShopSectionIdSortOnEnum];
/**
 * @export
 */
export const GetListingsByShopSectionIdSortOrderEnum = {
    Asc: 'asc',
    Ascending: 'ascending',
    Desc: 'desc',
    Descending: 'descending',
    Up: 'up',
    Down: 'down'
} as const;
export type GetListingsByShopSectionIdSortOrderEnum = typeof GetListingsByShopSectionIdSortOrderEnum[keyof typeof GetListingsByShopSectionIdSortOrderEnum];
/**
 * @export
 */
export const UpdateListingItemWeightUnitEnum = {
    Empty: '',
    Oz: 'oz',
    Lb: 'lb',
    G: 'g',
    Kg: 'kg'
} as const;
export type UpdateListingItemWeightUnitEnum = typeof UpdateListingItemWeightUnitEnum[keyof typeof UpdateListingItemWeightUnitEnum];
/**
 * @export
 */
export const UpdateListingItemDimensionsUnitEnum = {
    Empty: '',
    In: 'in',
    Ft: 'ft',
    Mm: 'mm',
    Cm: 'cm',
    M: 'm',
    Yd: 'yd',
    Inches: 'inches'
} as const;
export type UpdateListingItemDimensionsUnitEnum = typeof UpdateListingItemDimensionsUnitEnum[keyof typeof UpdateListingItemDimensionsUnitEnum];
/**
 * @export
 */
export const UpdateListingWhoMadeEnum = {
    IDid: 'i_did',
    SomeoneElse: 'someone_else',
    Collective: 'collective'
} as const;
export type UpdateListingWhoMadeEnum = typeof UpdateListingWhoMadeEnum[keyof typeof UpdateListingWhoMadeEnum];
/**
 * @export
 */
export const UpdateListingWhenMadeEnum = {
    MadeToOrder: 'made_to_order',
    _20202025: '2020_2025',
    _20102019: '2010_2019',
    _20062009: '2006_2009',
    Before2006: 'before_2006',
    _20002005: '2000_2005',
    _1990s: '1990s',
    _1980s: '1980s',
    _1970s: '1970s',
    _1960s: '1960s',
    _1950s: '1950s',
    _1940s: '1940s',
    _1930s: '1930s',
    _1920s: '1920s',
    _1910s: '1910s',
    _1900s: '1900s',
    _1800s: '1800s',
    _1700s: '1700s',
    Before1700: 'before_1700'
} as const;
export type UpdateListingWhenMadeEnum = typeof UpdateListingWhenMadeEnum[keyof typeof UpdateListingWhenMadeEnum];
/**
 * @export
 */
export const UpdateListingStateEnum = {
    Active: 'active',
    Inactive: 'inactive'
} as const;
export type UpdateListingStateEnum = typeof UpdateListingStateEnum[keyof typeof UpdateListingStateEnum];
/**
 * @export
 */
export const UpdateListingTypeEnum = {
    Physical: 'physical',
    Download: 'download',
    Both: 'both'
} as const;
export type UpdateListingTypeEnum = typeof UpdateListingTypeEnum[keyof typeof UpdateListingTypeEnum];
/**
 * @export
 */
export const UpdateListingDeprecatedItemWeightUnitEnum = {
    Oz: 'oz',
    Lb: 'lb',
    G: 'g',
    Kg: 'kg'
} as const;
export type UpdateListingDeprecatedItemWeightUnitEnum = typeof UpdateListingDeprecatedItemWeightUnitEnum[keyof typeof UpdateListingDeprecatedItemWeightUnitEnum];
/**
 * @export
 */
export const UpdateListingDeprecatedItemDimensionsUnitEnum = {
    In: 'in',
    Ft: 'ft',
    Mm: 'mm',
    Cm: 'cm',
    M: 'm',
    Yd: 'yd',
    Inches: 'inches'
} as const;
export type UpdateListingDeprecatedItemDimensionsUnitEnum = typeof UpdateListingDeprecatedItemDimensionsUnitEnum[keyof typeof UpdateListingDeprecatedItemDimensionsUnitEnum];
/**
 * @export
 */
export const UpdateListingDeprecatedWhoMadeEnum = {
    IDid: 'i_did',
    SomeoneElse: 'someone_else',
    Collective: 'collective'
} as const;
export type UpdateListingDeprecatedWhoMadeEnum = typeof UpdateListingDeprecatedWhoMadeEnum[keyof typeof UpdateListingDeprecatedWhoMadeEnum];
/**
 * @export
 */
export const UpdateListingDeprecatedWhenMadeEnum = {
    MadeToOrder: 'made_to_order',
    _20202025: '2020_2025',
    _20102019: '2010_2019',
    _20062009: '2006_2009',
    Before2006: 'before_2006',
    _20002005: '2000_2005',
    _1990s: '1990s',
    _1980s: '1980s',
    _1970s: '1970s',
    _1960s: '1960s',
    _1950s: '1950s',
    _1940s: '1940s',
    _1930s: '1930s',
    _1920s: '1920s',
    _1910s: '1910s',
    _1900s: '1900s',
    _1800s: '1800s',
    _1700s: '1700s',
    Before1700: 'before_1700'
} as const;
export type UpdateListingDeprecatedWhenMadeEnum = typeof UpdateListingDeprecatedWhenMadeEnum[keyof typeof UpdateListingDeprecatedWhenMadeEnum];
/**
 * @export
 */
export const UpdateListingDeprecatedStateEnum = {
    Active: 'active',
    Inactive: 'inactive'
} as const;
export type UpdateListingDeprecatedStateEnum = typeof UpdateListingDeprecatedStateEnum[keyof typeof UpdateListingDeprecatedStateEnum];
/**
 * @export
 */
export const UpdateListingDeprecatedTypeEnum = {
    Physical: 'physical',
    Download: 'download',
    Both: 'both'
} as const;
export type UpdateListingDeprecatedTypeEnum = typeof UpdateListingDeprecatedTypeEnum[keyof typeof UpdateListingDeprecatedTypeEnum];
