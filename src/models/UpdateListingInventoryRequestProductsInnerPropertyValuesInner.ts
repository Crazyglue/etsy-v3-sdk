/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateListingInventoryRequestProductsInnerPropertyValuesInner
 */
export interface UpdateListingInventoryRequestProductsInnerPropertyValuesInner {
    /**
     * The unique ID of an Etsy [listing property](/documentation/reference#operation/getListingProperties).
     * @type {number}
     * @memberof UpdateListingInventoryRequestProductsInnerPropertyValuesInner
     */
    propertyId: number;
    /**
     * An array of unique IDs of multiple Etsy [listing property](/documentation/reference#operation/getListingProperties) values. For example, if your listing offers different sizes of a product, then the value ID list contains value IDs for each size.
     * @type {Array<number>}
     * @memberof UpdateListingInventoryRequestProductsInnerPropertyValuesInner
     */
    valueIds: Array<number>;
    /**
     * The numeric ID of a single Etsy.com measurement scale. For example, for shoe size, there are three `scale_id`s available - `UK`, `US/Canada`, and `EU`, where `US/Canada` has `scale_id` 19.
     * @type {number}
     * @memberof UpdateListingInventoryRequestProductsInnerPropertyValuesInner
     */
    scaleId?: number | null;
    /**
     * The name of the property, in the requested locale language.
     * @type {string}
     * @memberof UpdateListingInventoryRequestProductsInnerPropertyValuesInner
     */
    propertyName?: string;
    /**
     * A list of property value entries for this product. Note: parenthesis characters (`(` and `)`) are not allowed.
     * @type {Array<string>}
     * @memberof UpdateListingInventoryRequestProductsInnerPropertyValuesInner
     */
    values: Array<string>;
}

/**
 * Check if a given object implements the UpdateListingInventoryRequestProductsInnerPropertyValuesInner interface.
 */
export function instanceOfUpdateListingInventoryRequestProductsInnerPropertyValuesInner(value: object): value is UpdateListingInventoryRequestProductsInnerPropertyValuesInner {
    if (!('propertyId' in value) || value['propertyId'] === undefined) return false;
    if (!('valueIds' in value) || value['valueIds'] === undefined) return false;
    if (!('values' in value) || value['values'] === undefined) return false;
    return true;
}

export function UpdateListingInventoryRequestProductsInnerPropertyValuesInnerFromJSON(json: any): UpdateListingInventoryRequestProductsInnerPropertyValuesInner {
    return UpdateListingInventoryRequestProductsInnerPropertyValuesInnerFromJSONTyped(json, false);
}

export function UpdateListingInventoryRequestProductsInnerPropertyValuesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateListingInventoryRequestProductsInnerPropertyValuesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'propertyId': json['property_id'],
        'valueIds': json['value_ids'],
        'scaleId': json['scale_id'] == null ? undefined : json['scale_id'],
        'propertyName': json['property_name'] == null ? undefined : json['property_name'],
        'values': json['values'],
    };
}

export function UpdateListingInventoryRequestProductsInnerPropertyValuesInnerToJSON(json: any): UpdateListingInventoryRequestProductsInnerPropertyValuesInner {
    return UpdateListingInventoryRequestProductsInnerPropertyValuesInnerToJSONTyped(json, false);
}

export function UpdateListingInventoryRequestProductsInnerPropertyValuesInnerToJSONTyped(value?: UpdateListingInventoryRequestProductsInnerPropertyValuesInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'property_id': value['propertyId'],
        'value_ids': value['valueIds'],
        'scale_id': value['scaleId'],
        'property_name': value['propertyName'],
        'values': value['values'],
    };
}

