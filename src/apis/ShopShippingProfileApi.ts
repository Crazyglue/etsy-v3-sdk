/* tslint:disable */
/* eslint-disable */
/**
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy\'s Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy\'s Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you\'d like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2025 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy\'s <a class=\'wt-text-link wt-p-xs-0\' target=\'_blank\' href=\'https://www.etsy.com/legal/api\'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorSchema,
  ShippingCarriers,
  ShopShippingProfile,
  ShopShippingProfileDestination,
  ShopShippingProfileDestinations,
  ShopShippingProfileUpgrade,
  ShopShippingProfileUpgrades,
  ShopShippingProfiles,
} from '../models/index';
import {
    ErrorSchemaFromJSON,
    ErrorSchemaToJSON,
    ShippingCarriersFromJSON,
    ShippingCarriersToJSON,
    ShopShippingProfileFromJSON,
    ShopShippingProfileToJSON,
    ShopShippingProfileDestinationFromJSON,
    ShopShippingProfileDestinationToJSON,
    ShopShippingProfileDestinationsFromJSON,
    ShopShippingProfileDestinationsToJSON,
    ShopShippingProfileUpgradeFromJSON,
    ShopShippingProfileUpgradeToJSON,
    ShopShippingProfileUpgradesFromJSON,
    ShopShippingProfileUpgradesToJSON,
    ShopShippingProfilesFromJSON,
    ShopShippingProfilesToJSON,
} from '../models/index';

export interface CreateShopShippingProfileRequest {
    shopId: number;
    title: string;
    originCountryIso: string;
    primaryCost: number;
    secondaryCost: number;
    minProcessingTime: number;
    maxProcessingTime: number;
    processingTimeUnit?: CreateShopShippingProfileProcessingTimeUnitEnum;
    destinationCountryIso?: string;
    destinationRegion?: CreateShopShippingProfileDestinationRegionEnum;
    originPostalCode?: string;
    shippingCarrierId?: number;
    mailClass?: string;
    minDeliveryDays?: number;
    maxDeliveryDays?: number;
}

export interface CreateShopShippingProfileDestinationRequest {
    shopId: number;
    shippingProfileId: number;
    primaryCost: number;
    secondaryCost: number;
    destinationCountryIso?: string;
    destinationRegion?: CreateShopShippingProfileDestinationDestinationRegionEnum;
    shippingCarrierId?: number;
    mailClass?: string;
    minDeliveryDays?: number;
    maxDeliveryDays?: number;
}

export interface CreateShopShippingProfileUpgradeRequest {
    shopId: number;
    shippingProfileId: number;
    type: CreateShopShippingProfileUpgradeTypeEnum;
    upgradeName: string;
    price: number;
    secondaryPrice: number;
    shippingCarrierId?: number;
    mailClass?: string;
    minDeliveryDays?: number;
    maxDeliveryDays?: number;
}

export interface DeleteShopShippingProfileRequest {
    shopId: number;
    shippingProfileId: number;
}

export interface DeleteShopShippingProfileDestinationRequest {
    shopId: number;
    shippingProfileId: number;
    shippingProfileDestinationId: number;
}

export interface DeleteShopShippingProfileUpgradeRequest {
    shopId: number;
    shippingProfileId: number;
    upgradeId: number;
}

export interface GetShippingCarriersRequest {
    originCountryIso: string;
}

export interface GetShopShippingProfileRequest {
    shopId: number;
    shippingProfileId: number;
}

export interface GetShopShippingProfileDestinationsByShippingProfileRequest {
    shopId: number;
    shippingProfileId: number;
    limit?: number;
    offset?: number;
}

export interface GetShopShippingProfileUpgradesRequest {
    shopId: number;
    shippingProfileId: number;
}

export interface GetShopShippingProfilesRequest {
    shopId: number;
}

export interface UpdateShopShippingProfileRequest {
    shopId: number;
    shippingProfileId: number;
    title?: string;
    originCountryIso?: string;
    minProcessingTime?: number;
    maxProcessingTime?: number;
    processingTimeUnit?: UpdateShopShippingProfileProcessingTimeUnitEnum;
    originPostalCode?: string;
}

export interface UpdateShopShippingProfileDestinationRequest {
    shopId: number;
    shippingProfileId: number;
    shippingProfileDestinationId: number;
    primaryCost?: number;
    secondaryCost?: number;
    destinationCountryIso?: string;
    destinationRegion?: UpdateShopShippingProfileDestinationDestinationRegionEnum;
    shippingCarrierId?: number;
    mailClass?: string;
    minDeliveryDays?: number;
    maxDeliveryDays?: number;
}

export interface UpdateShopShippingProfileUpgradeRequest {
    shopId: number;
    shippingProfileId: number;
    upgradeId: number;
    upgradeName?: string;
    type?: UpdateShopShippingProfileUpgradeTypeEnum;
    price?: number;
    secondaryPrice?: number;
    shippingCarrierId?: number;
    mailClass?: string;
    minDeliveryDays?: number;
    maxDeliveryDays?: number;
}

/**
 * 
 */
export class ShopShippingProfileApi extends runtime.BaseAPI {

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Creates a new ShippingProfile. You can pass a country iso code or a region when creating a ShippingProfile, but not both. Only one is required. You must pass either a shipping_carrier_id AND mail_class, or both min and max_delivery_days.
     */
    async createShopShippingProfileRaw(requestParameters: CreateShopShippingProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopShippingProfile>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling createShopShippingProfile().'
            );
        }

        if (requestParameters['title'] == null) {
            throw new runtime.RequiredError(
                'title',
                'Required parameter "title" was null or undefined when calling createShopShippingProfile().'
            );
        }

        if (requestParameters['originCountryIso'] == null) {
            throw new runtime.RequiredError(
                'originCountryIso',
                'Required parameter "originCountryIso" was null or undefined when calling createShopShippingProfile().'
            );
        }

        if (requestParameters['primaryCost'] == null) {
            throw new runtime.RequiredError(
                'primaryCost',
                'Required parameter "primaryCost" was null or undefined when calling createShopShippingProfile().'
            );
        }

        if (requestParameters['secondaryCost'] == null) {
            throw new runtime.RequiredError(
                'secondaryCost',
                'Required parameter "secondaryCost" was null or undefined when calling createShopShippingProfile().'
            );
        }

        if (requestParameters['minProcessingTime'] == null) {
            throw new runtime.RequiredError(
                'minProcessingTime',
                'Required parameter "minProcessingTime" was null or undefined when calling createShopShippingProfile().'
            );
        }

        if (requestParameters['maxProcessingTime'] == null) {
            throw new runtime.RequiredError(
                'maxProcessingTime',
                'Required parameter "maxProcessingTime" was null or undefined when calling createShopShippingProfile().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["shops_w"]);
        }

        const consumes: runtime.Consume[] = [
            { contentType: 'application/x-www-form-urlencoded' },
        ];
        // @ts-ignore: canConsumeForm may be unused
        const canConsumeForm = runtime.canConsumeForm(consumes);

        let formParams: { append(param: string, value: any): any };
        let useForm = false;
        if (useForm) {
            formParams = new FormData();
        } else {
            formParams = new URLSearchParams();
        }

        if (requestParameters['title'] != null) {
            formParams.append('title', requestParameters['title'] as any);
        }

        if (requestParameters['originCountryIso'] != null) {
            formParams.append('origin_country_iso', requestParameters['originCountryIso'] as any);
        }

        if (requestParameters['primaryCost'] != null) {
            formParams.append('primary_cost', requestParameters['primaryCost'] as any);
        }

        if (requestParameters['secondaryCost'] != null) {
            formParams.append('secondary_cost', requestParameters['secondaryCost'] as any);
        }

        if (requestParameters['minProcessingTime'] != null) {
            formParams.append('min_processing_time', requestParameters['minProcessingTime'] as any);
        }

        if (requestParameters['maxProcessingTime'] != null) {
            formParams.append('max_processing_time', requestParameters['maxProcessingTime'] as any);
        }

        if (requestParameters['processingTimeUnit'] != null) {
            formParams.append('processing_time_unit', requestParameters['processingTimeUnit'] as any);
        }

        if (requestParameters['destinationCountryIso'] != null) {
            formParams.append('destination_country_iso', requestParameters['destinationCountryIso'] as any);
        }

        if (requestParameters['destinationRegion'] != null) {
            formParams.append('destination_region', requestParameters['destinationRegion'] as any);
        }

        if (requestParameters['originPostalCode'] != null) {
            formParams.append('origin_postal_code', requestParameters['originPostalCode'] as any);
        }

        if (requestParameters['shippingCarrierId'] != null) {
            formParams.append('shipping_carrier_id', requestParameters['shippingCarrierId'] as any);
        }

        if (requestParameters['mailClass'] != null) {
            formParams.append('mail_class', requestParameters['mailClass'] as any);
        }

        if (requestParameters['minDeliveryDays'] != null) {
            formParams.append('min_delivery_days', requestParameters['minDeliveryDays'] as any);
        }

        if (requestParameters['maxDeliveryDays'] != null) {
            formParams.append('max_delivery_days', requestParameters['maxDeliveryDays'] as any);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/shipping-profiles`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: formParams,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopShippingProfileFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Creates a new ShippingProfile. You can pass a country iso code or a region when creating a ShippingProfile, but not both. Only one is required. You must pass either a shipping_carrier_id AND mail_class, or both min and max_delivery_days.
     */
    async createShopShippingProfile(requestParameters: CreateShopShippingProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopShippingProfile> {
        const response = await this.createShopShippingProfileRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Creates a new shipping destination, which sets the shipping cost, carrier, and class for a destination in a [shipping profile](/documentation/reference/#tag/Shop-ShippingProfile). createShopShippingProfileDestination assigns costs using the currency of the associated shop. Set the destination using either `destination_country_iso` or `destination_region`; `destination_country_iso` and `destination_region` are mutually exclusive — set one or the other. Setting both triggers error 400. If the request sets neither `destination_country_iso` nor `destination_region`, the default destination is \"everywhere\". You must also either assign both a `shipping_carrier_id` AND `mail_class` or both `min_delivery_days` AND `max_delivery_days`.
     */
    async createShopShippingProfileDestinationRaw(requestParameters: CreateShopShippingProfileDestinationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopShippingProfileDestination>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling createShopShippingProfileDestination().'
            );
        }

        if (requestParameters['shippingProfileId'] == null) {
            throw new runtime.RequiredError(
                'shippingProfileId',
                'Required parameter "shippingProfileId" was null or undefined when calling createShopShippingProfileDestination().'
            );
        }

        if (requestParameters['primaryCost'] == null) {
            throw new runtime.RequiredError(
                'primaryCost',
                'Required parameter "primaryCost" was null or undefined when calling createShopShippingProfileDestination().'
            );
        }

        if (requestParameters['secondaryCost'] == null) {
            throw new runtime.RequiredError(
                'secondaryCost',
                'Required parameter "secondaryCost" was null or undefined when calling createShopShippingProfileDestination().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["shops_w"]);
        }

        const consumes: runtime.Consume[] = [
            { contentType: 'application/x-www-form-urlencoded' },
        ];
        // @ts-ignore: canConsumeForm may be unused
        const canConsumeForm = runtime.canConsumeForm(consumes);

        let formParams: { append(param: string, value: any): any };
        let useForm = false;
        if (useForm) {
            formParams = new FormData();
        } else {
            formParams = new URLSearchParams();
        }

        if (requestParameters['primaryCost'] != null) {
            formParams.append('primary_cost', requestParameters['primaryCost'] as any);
        }

        if (requestParameters['secondaryCost'] != null) {
            formParams.append('secondary_cost', requestParameters['secondaryCost'] as any);
        }

        if (requestParameters['destinationCountryIso'] != null) {
            formParams.append('destination_country_iso', requestParameters['destinationCountryIso'] as any);
        }

        if (requestParameters['destinationRegion'] != null) {
            formParams.append('destination_region', requestParameters['destinationRegion'] as any);
        }

        if (requestParameters['shippingCarrierId'] != null) {
            formParams.append('shipping_carrier_id', requestParameters['shippingCarrierId'] as any);
        }

        if (requestParameters['mailClass'] != null) {
            formParams.append('mail_class', requestParameters['mailClass'] as any);
        }

        if (requestParameters['minDeliveryDays'] != null) {
            formParams.append('min_delivery_days', requestParameters['minDeliveryDays'] as any);
        }

        if (requestParameters['maxDeliveryDays'] != null) {
            formParams.append('max_delivery_days', requestParameters['maxDeliveryDays'] as any);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}/destinations`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"shipping_profile_id"}}`, encodeURIComponent(String(requestParameters['shippingProfileId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: formParams,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopShippingProfileDestinationFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Creates a new shipping destination, which sets the shipping cost, carrier, and class for a destination in a [shipping profile](/documentation/reference/#tag/Shop-ShippingProfile). createShopShippingProfileDestination assigns costs using the currency of the associated shop. Set the destination using either `destination_country_iso` or `destination_region`; `destination_country_iso` and `destination_region` are mutually exclusive — set one or the other. Setting both triggers error 400. If the request sets neither `destination_country_iso` nor `destination_region`, the default destination is \"everywhere\". You must also either assign both a `shipping_carrier_id` AND `mail_class` or both `min_delivery_days` AND `max_delivery_days`.
     */
    async createShopShippingProfileDestination(requestParameters: CreateShopShippingProfileDestinationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopShippingProfileDestination> {
        const response = await this.createShopShippingProfileDestinationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Creates a new shipping profile upgrade, which can establish a price for a shipping option, such as an alternate carrier or faster delivery.
     */
    async createShopShippingProfileUpgradeRaw(requestParameters: CreateShopShippingProfileUpgradeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopShippingProfileUpgrade>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling createShopShippingProfileUpgrade().'
            );
        }

        if (requestParameters['shippingProfileId'] == null) {
            throw new runtime.RequiredError(
                'shippingProfileId',
                'Required parameter "shippingProfileId" was null or undefined when calling createShopShippingProfileUpgrade().'
            );
        }

        if (requestParameters['type'] == null) {
            throw new runtime.RequiredError(
                'type',
                'Required parameter "type" was null or undefined when calling createShopShippingProfileUpgrade().'
            );
        }

        if (requestParameters['upgradeName'] == null) {
            throw new runtime.RequiredError(
                'upgradeName',
                'Required parameter "upgradeName" was null or undefined when calling createShopShippingProfileUpgrade().'
            );
        }

        if (requestParameters['price'] == null) {
            throw new runtime.RequiredError(
                'price',
                'Required parameter "price" was null or undefined when calling createShopShippingProfileUpgrade().'
            );
        }

        if (requestParameters['secondaryPrice'] == null) {
            throw new runtime.RequiredError(
                'secondaryPrice',
                'Required parameter "secondaryPrice" was null or undefined when calling createShopShippingProfileUpgrade().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["shops_w"]);
        }

        const consumes: runtime.Consume[] = [
            { contentType: 'application/x-www-form-urlencoded' },
        ];
        // @ts-ignore: canConsumeForm may be unused
        const canConsumeForm = runtime.canConsumeForm(consumes);

        let formParams: { append(param: string, value: any): any };
        let useForm = false;
        if (useForm) {
            formParams = new FormData();
        } else {
            formParams = new URLSearchParams();
        }

        if (requestParameters['type'] != null) {
            formParams.append('type', requestParameters['type'] as any);
        }

        if (requestParameters['upgradeName'] != null) {
            formParams.append('upgrade_name', requestParameters['upgradeName'] as any);
        }

        if (requestParameters['price'] != null) {
            formParams.append('price', requestParameters['price'] as any);
        }

        if (requestParameters['secondaryPrice'] != null) {
            formParams.append('secondary_price', requestParameters['secondaryPrice'] as any);
        }

        if (requestParameters['shippingCarrierId'] != null) {
            formParams.append('shipping_carrier_id', requestParameters['shippingCarrierId'] as any);
        }

        if (requestParameters['mailClass'] != null) {
            formParams.append('mail_class', requestParameters['mailClass'] as any);
        }

        if (requestParameters['minDeliveryDays'] != null) {
            formParams.append('min_delivery_days', requestParameters['minDeliveryDays'] as any);
        }

        if (requestParameters['maxDeliveryDays'] != null) {
            formParams.append('max_delivery_days', requestParameters['maxDeliveryDays'] as any);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}/upgrades`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"shipping_profile_id"}}`, encodeURIComponent(String(requestParameters['shippingProfileId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: formParams,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopShippingProfileUpgradeFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Creates a new shipping profile upgrade, which can establish a price for a shipping option, such as an alternate carrier or faster delivery.
     */
    async createShopShippingProfileUpgrade(requestParameters: CreateShopShippingProfileUpgradeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopShippingProfileUpgrade> {
        const response = await this.createShopShippingProfileUpgradeRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Deletes a ShippingProfile by given id.
     */
    async deleteShopShippingProfileRaw(requestParameters: DeleteShopShippingProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling deleteShopShippingProfile().'
            );
        }

        if (requestParameters['shippingProfileId'] == null) {
            throw new runtime.RequiredError(
                'shippingProfileId',
                'Required parameter "shippingProfileId" was null or undefined when calling deleteShopShippingProfile().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["shops_w"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"shipping_profile_id"}}`, encodeURIComponent(String(requestParameters['shippingProfileId']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Deletes a ShippingProfile by given id.
     */
    async deleteShopShippingProfile(requestParameters: DeleteShopShippingProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteShopShippingProfileRaw(requestParameters, initOverrides);
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Deletes a shipping destination and removes the destination option from every listing that uses the associated shipping profile. A shipping profile requires at least one shipping destination, so this endpoint cannot delete the final shipping destination for any shipping profile. To delete the final shipping destination from a shipping profile, you must [delete the entire shipping profile](/documentation/reference/#operation/deleteShopShippingProfile).
     */
    async deleteShopShippingProfileDestinationRaw(requestParameters: DeleteShopShippingProfileDestinationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling deleteShopShippingProfileDestination().'
            );
        }

        if (requestParameters['shippingProfileId'] == null) {
            throw new runtime.RequiredError(
                'shippingProfileId',
                'Required parameter "shippingProfileId" was null or undefined when calling deleteShopShippingProfileDestination().'
            );
        }

        if (requestParameters['shippingProfileDestinationId'] == null) {
            throw new runtime.RequiredError(
                'shippingProfileDestinationId',
                'Required parameter "shippingProfileDestinationId" was null or undefined when calling deleteShopShippingProfileDestination().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["shops_w"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}/destinations/{shipping_profile_destination_id}`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"shipping_profile_id"}}`, encodeURIComponent(String(requestParameters['shippingProfileId']))).replace(`{${"shipping_profile_destination_id"}}`, encodeURIComponent(String(requestParameters['shippingProfileDestinationId']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Deletes a shipping destination and removes the destination option from every listing that uses the associated shipping profile. A shipping profile requires at least one shipping destination, so this endpoint cannot delete the final shipping destination for any shipping profile. To delete the final shipping destination from a shipping profile, you must [delete the entire shipping profile](/documentation/reference/#operation/deleteShopShippingProfile).
     */
    async deleteShopShippingProfileDestination(requestParameters: DeleteShopShippingProfileDestinationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteShopShippingProfileDestinationRaw(requestParameters, initOverrides);
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Deletes a shipping profile upgrade and removes the upgrade option from every listing that uses the associated shipping profile.
     */
    async deleteShopShippingProfileUpgradeRaw(requestParameters: DeleteShopShippingProfileUpgradeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling deleteShopShippingProfileUpgrade().'
            );
        }

        if (requestParameters['shippingProfileId'] == null) {
            throw new runtime.RequiredError(
                'shippingProfileId',
                'Required parameter "shippingProfileId" was null or undefined when calling deleteShopShippingProfileUpgrade().'
            );
        }

        if (requestParameters['upgradeId'] == null) {
            throw new runtime.RequiredError(
                'upgradeId',
                'Required parameter "upgradeId" was null or undefined when calling deleteShopShippingProfileUpgrade().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["shops_w"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}/upgrades/{upgrade_id}`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"shipping_profile_id"}}`, encodeURIComponent(String(requestParameters['shippingProfileId']))).replace(`{${"upgrade_id"}}`, encodeURIComponent(String(requestParameters['upgradeId']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Deletes a shipping profile upgrade and removes the upgrade option from every listing that uses the associated shipping profile.
     */
    async deleteShopShippingProfileUpgrade(requestParameters: DeleteShopShippingProfileUpgradeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteShopShippingProfileUpgradeRaw(requestParameters, initOverrides);
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a list of available shipping carriers and the mail classes associated with them for a given country
     */
    async getShippingCarriersRaw(requestParameters: GetShippingCarriersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShippingCarriers>> {
        if (requestParameters['originCountryIso'] == null) {
            throw new runtime.RequiredError(
                'originCountryIso',
                'Required parameter "originCountryIso" was null or undefined when calling getShippingCarriers().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['originCountryIso'] != null) {
            queryParameters['origin_country_iso'] = requestParameters['originCountryIso'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        const response = await this.request({
            path: `/v3/application/shipping-carriers`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShippingCarriersFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a list of available shipping carriers and the mail classes associated with them for a given country
     */
    async getShippingCarriers(requestParameters: GetShippingCarriersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShippingCarriers> {
        const response = await this.getShippingCarriersRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a Shipping Profile referenced by shipping profile ID.
     */
    async getShopShippingProfileRaw(requestParameters: GetShopShippingProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopShippingProfile>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling getShopShippingProfile().'
            );
        }

        if (requestParameters['shippingProfileId'] == null) {
            throw new runtime.RequiredError(
                'shippingProfileId',
                'Required parameter "shippingProfileId" was null or undefined when calling getShopShippingProfile().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["shops_r"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"shipping_profile_id"}}`, encodeURIComponent(String(requestParameters['shippingProfileId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopShippingProfileFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a Shipping Profile referenced by shipping profile ID.
     */
    async getShopShippingProfile(requestParameters: GetShopShippingProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopShippingProfile> {
        const response = await this.getShopShippingProfileRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a list of shipping destination objects associated with a shipping profile.
     */
    async getShopShippingProfileDestinationsByShippingProfileRaw(requestParameters: GetShopShippingProfileDestinationsByShippingProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopShippingProfileDestinations>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling getShopShippingProfileDestinationsByShippingProfile().'
            );
        }

        if (requestParameters['shippingProfileId'] == null) {
            throw new runtime.RequiredError(
                'shippingProfileId',
                'Required parameter "shippingProfileId" was null or undefined when calling getShopShippingProfileDestinationsByShippingProfile().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["shops_r"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}/destinations`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"shipping_profile_id"}}`, encodeURIComponent(String(requestParameters['shippingProfileId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopShippingProfileDestinationsFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a list of shipping destination objects associated with a shipping profile.
     */
    async getShopShippingProfileDestinationsByShippingProfile(requestParameters: GetShopShippingProfileDestinationsByShippingProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopShippingProfileDestinations> {
        const response = await this.getShopShippingProfileDestinationsByShippingProfileRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves the list of shipping profile upgrades assigned to a specific shipping profile.
     */
    async getShopShippingProfileUpgradesRaw(requestParameters: GetShopShippingProfileUpgradesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopShippingProfileUpgrades>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling getShopShippingProfileUpgrades().'
            );
        }

        if (requestParameters['shippingProfileId'] == null) {
            throw new runtime.RequiredError(
                'shippingProfileId',
                'Required parameter "shippingProfileId" was null or undefined when calling getShopShippingProfileUpgrades().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["shops_r"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}/upgrades`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"shipping_profile_id"}}`, encodeURIComponent(String(requestParameters['shippingProfileId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopShippingProfileUpgradesFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves the list of shipping profile upgrades assigned to a specific shipping profile.
     */
    async getShopShippingProfileUpgrades(requestParameters: GetShopShippingProfileUpgradesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopShippingProfileUpgrades> {
        const response = await this.getShopShippingProfileUpgradesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a list of shipping profiles available in the specific Etsy shop identified by its shop ID.
     */
    async getShopShippingProfilesRaw(requestParameters: GetShopShippingProfilesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopShippingProfiles>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling getShopShippingProfiles().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["shops_r"]);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/shipping-profiles`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopShippingProfilesFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a list of shipping profiles available in the specific Etsy shop identified by its shop ID.
     */
    async getShopShippingProfiles(requestParameters: GetShopShippingProfilesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopShippingProfiles> {
        const response = await this.getShopShippingProfilesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Changes the settings in a shipping profile. You can pass a country iso code or a region when updating a ShippingProfile, but not both. Only one is required. You must pass either a shipping_carrier_id AND mail_class, or both min and max_delivery_days.
     */
    async updateShopShippingProfileRaw(requestParameters: UpdateShopShippingProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopShippingProfile>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling updateShopShippingProfile().'
            );
        }

        if (requestParameters['shippingProfileId'] == null) {
            throw new runtime.RequiredError(
                'shippingProfileId',
                'Required parameter "shippingProfileId" was null or undefined when calling updateShopShippingProfile().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["shops_w"]);
        }

        const consumes: runtime.Consume[] = [
            { contentType: 'application/x-www-form-urlencoded' },
        ];
        // @ts-ignore: canConsumeForm may be unused
        const canConsumeForm = runtime.canConsumeForm(consumes);

        let formParams: { append(param: string, value: any): any };
        let useForm = false;
        if (useForm) {
            formParams = new FormData();
        } else {
            formParams = new URLSearchParams();
        }

        if (requestParameters['title'] != null) {
            formParams.append('title', requestParameters['title'] as any);
        }

        if (requestParameters['originCountryIso'] != null) {
            formParams.append('origin_country_iso', requestParameters['originCountryIso'] as any);
        }

        if (requestParameters['minProcessingTime'] != null) {
            formParams.append('min_processing_time', requestParameters['minProcessingTime'] as any);
        }

        if (requestParameters['maxProcessingTime'] != null) {
            formParams.append('max_processing_time', requestParameters['maxProcessingTime'] as any);
        }

        if (requestParameters['processingTimeUnit'] != null) {
            formParams.append('processing_time_unit', requestParameters['processingTimeUnit'] as any);
        }

        if (requestParameters['originPostalCode'] != null) {
            formParams.append('origin_postal_code', requestParameters['originPostalCode'] as any);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"shipping_profile_id"}}`, encodeURIComponent(String(requestParameters['shippingProfileId']))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: formParams,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopShippingProfileFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Changes the settings in a shipping profile. You can pass a country iso code or a region when updating a ShippingProfile, but not both. Only one is required. You must pass either a shipping_carrier_id AND mail_class, or both min and max_delivery_days.
     */
    async updateShopShippingProfile(requestParameters: UpdateShopShippingProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopShippingProfile> {
        const response = await this.updateShopShippingProfileRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Updates an existing shipping destination, which can set or reassign the shipping cost, carrier, and class for a destination.
     */
    async updateShopShippingProfileDestinationRaw(requestParameters: UpdateShopShippingProfileDestinationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopShippingProfileDestination>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling updateShopShippingProfileDestination().'
            );
        }

        if (requestParameters['shippingProfileId'] == null) {
            throw new runtime.RequiredError(
                'shippingProfileId',
                'Required parameter "shippingProfileId" was null or undefined when calling updateShopShippingProfileDestination().'
            );
        }

        if (requestParameters['shippingProfileDestinationId'] == null) {
            throw new runtime.RequiredError(
                'shippingProfileDestinationId',
                'Required parameter "shippingProfileDestinationId" was null or undefined when calling updateShopShippingProfileDestination().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["shops_w"]);
        }

        const consumes: runtime.Consume[] = [
            { contentType: 'application/x-www-form-urlencoded' },
        ];
        // @ts-ignore: canConsumeForm may be unused
        const canConsumeForm = runtime.canConsumeForm(consumes);

        let formParams: { append(param: string, value: any): any };
        let useForm = false;
        if (useForm) {
            formParams = new FormData();
        } else {
            formParams = new URLSearchParams();
        }

        if (requestParameters['primaryCost'] != null) {
            formParams.append('primary_cost', requestParameters['primaryCost'] as any);
        }

        if (requestParameters['secondaryCost'] != null) {
            formParams.append('secondary_cost', requestParameters['secondaryCost'] as any);
        }

        if (requestParameters['destinationCountryIso'] != null) {
            formParams.append('destination_country_iso', requestParameters['destinationCountryIso'] as any);
        }

        if (requestParameters['destinationRegion'] != null) {
            formParams.append('destination_region', requestParameters['destinationRegion'] as any);
        }

        if (requestParameters['shippingCarrierId'] != null) {
            formParams.append('shipping_carrier_id', requestParameters['shippingCarrierId'] as any);
        }

        if (requestParameters['mailClass'] != null) {
            formParams.append('mail_class', requestParameters['mailClass'] as any);
        }

        if (requestParameters['minDeliveryDays'] != null) {
            formParams.append('min_delivery_days', requestParameters['minDeliveryDays'] as any);
        }

        if (requestParameters['maxDeliveryDays'] != null) {
            formParams.append('max_delivery_days', requestParameters['maxDeliveryDays'] as any);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}/destinations/{shipping_profile_destination_id}`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"shipping_profile_id"}}`, encodeURIComponent(String(requestParameters['shippingProfileId']))).replace(`{${"shipping_profile_destination_id"}}`, encodeURIComponent(String(requestParameters['shippingProfileDestinationId']))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: formParams,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopShippingProfileDestinationFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Updates an existing shipping destination, which can set or reassign the shipping cost, carrier, and class for a destination.
     */
    async updateShopShippingProfileDestination(requestParameters: UpdateShopShippingProfileDestinationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopShippingProfileDestination> {
        const response = await this.updateShopShippingProfileDestinationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Updates a shipping profile upgrade and updates any listings that use the shipping profile.
     */
    async updateShopShippingProfileUpgradeRaw(requestParameters: UpdateShopShippingProfileUpgradeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShopShippingProfileUpgrade>> {
        if (requestParameters['shopId'] == null) {
            throw new runtime.RequiredError(
                'shopId',
                'Required parameter "shopId" was null or undefined when calling updateShopShippingProfileUpgrade().'
            );
        }

        if (requestParameters['shippingProfileId'] == null) {
            throw new runtime.RequiredError(
                'shippingProfileId',
                'Required parameter "shippingProfileId" was null or undefined when calling updateShopShippingProfileUpgrade().'
            );
        }

        if (requestParameters['upgradeId'] == null) {
            throw new runtime.RequiredError(
                'upgradeId',
                'Required parameter "upgradeId" was null or undefined when calling updateShopShippingProfileUpgrade().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-api-key"] = await this.configuration.apiKey("x-api-key"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["shops_w"]);
        }

        const consumes: runtime.Consume[] = [
            { contentType: 'application/x-www-form-urlencoded' },
        ];
        // @ts-ignore: canConsumeForm may be unused
        const canConsumeForm = runtime.canConsumeForm(consumes);

        let formParams: { append(param: string, value: any): any };
        let useForm = false;
        if (useForm) {
            formParams = new FormData();
        } else {
            formParams = new URLSearchParams();
        }

        if (requestParameters['upgradeName'] != null) {
            formParams.append('upgrade_name', requestParameters['upgradeName'] as any);
        }

        if (requestParameters['type'] != null) {
            formParams.append('type', requestParameters['type'] as any);
        }

        if (requestParameters['price'] != null) {
            formParams.append('price', requestParameters['price'] as any);
        }

        if (requestParameters['secondaryPrice'] != null) {
            formParams.append('secondary_price', requestParameters['secondaryPrice'] as any);
        }

        if (requestParameters['shippingCarrierId'] != null) {
            formParams.append('shipping_carrier_id', requestParameters['shippingCarrierId'] as any);
        }

        if (requestParameters['mailClass'] != null) {
            formParams.append('mail_class', requestParameters['mailClass'] as any);
        }

        if (requestParameters['minDeliveryDays'] != null) {
            formParams.append('min_delivery_days', requestParameters['minDeliveryDays'] as any);
        }

        if (requestParameters['maxDeliveryDays'] != null) {
            formParams.append('max_delivery_days', requestParameters['maxDeliveryDays'] as any);
        }

        const response = await this.request({
            path: `/v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}/upgrades/{upgrade_id}`.replace(`{${"shop_id"}}`, encodeURIComponent(String(requestParameters['shopId']))).replace(`{${"shipping_profile_id"}}`, encodeURIComponent(String(requestParameters['shippingProfileId']))).replace(`{${"upgrade_id"}}`, encodeURIComponent(String(requestParameters['upgradeId']))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: formParams,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ShopShippingProfileUpgradeFromJSON(jsonValue));
    }

    /**
     * <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Updates a shipping profile upgrade and updates any listings that use the shipping profile.
     */
    async updateShopShippingProfileUpgrade(requestParameters: UpdateShopShippingProfileUpgradeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShopShippingProfileUpgrade> {
        const response = await this.updateShopShippingProfileUpgradeRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const CreateShopShippingProfileProcessingTimeUnitEnum = {
    BusinessDays: 'business_days',
    Weeks: 'weeks'
} as const;
export type CreateShopShippingProfileProcessingTimeUnitEnum = typeof CreateShopShippingProfileProcessingTimeUnitEnum[keyof typeof CreateShopShippingProfileProcessingTimeUnitEnum];
/**
 * @export
 */
export const CreateShopShippingProfileDestinationRegionEnum = {
    Eu: 'eu',
    NonEu: 'non_eu',
    None: 'none'
} as const;
export type CreateShopShippingProfileDestinationRegionEnum = typeof CreateShopShippingProfileDestinationRegionEnum[keyof typeof CreateShopShippingProfileDestinationRegionEnum];
/**
 * @export
 */
export const CreateShopShippingProfileDestinationDestinationRegionEnum = {
    Eu: 'eu',
    NonEu: 'non_eu',
    None: 'none'
} as const;
export type CreateShopShippingProfileDestinationDestinationRegionEnum = typeof CreateShopShippingProfileDestinationDestinationRegionEnum[keyof typeof CreateShopShippingProfileDestinationDestinationRegionEnum];
/**
 * @export
 */
export const CreateShopShippingProfileUpgradeTypeEnum = {
    _0: '0',
    _1: '1'
} as const;
export type CreateShopShippingProfileUpgradeTypeEnum = typeof CreateShopShippingProfileUpgradeTypeEnum[keyof typeof CreateShopShippingProfileUpgradeTypeEnum];
/**
 * @export
 */
export const UpdateShopShippingProfileProcessingTimeUnitEnum = {
    BusinessDays: 'business_days',
    Weeks: 'weeks'
} as const;
export type UpdateShopShippingProfileProcessingTimeUnitEnum = typeof UpdateShopShippingProfileProcessingTimeUnitEnum[keyof typeof UpdateShopShippingProfileProcessingTimeUnitEnum];
/**
 * @export
 */
export const UpdateShopShippingProfileDestinationDestinationRegionEnum = {
    Eu: 'eu',
    NonEu: 'non_eu',
    None: 'none'
} as const;
export type UpdateShopShippingProfileDestinationDestinationRegionEnum = typeof UpdateShopShippingProfileDestinationDestinationRegionEnum[keyof typeof UpdateShopShippingProfileDestinationDestinationRegionEnum];
/**
 * @export
 */
export const UpdateShopShippingProfileUpgradeTypeEnum = {
    _0: '0',
    _1: '1'
} as const;
export type UpdateShopShippingProfileUpgradeTypeEnum = typeof UpdateShopShippingProfileUpgradeTypeEnum[keyof typeof UpdateShopShippingProfileUpgradeTypeEnum];
